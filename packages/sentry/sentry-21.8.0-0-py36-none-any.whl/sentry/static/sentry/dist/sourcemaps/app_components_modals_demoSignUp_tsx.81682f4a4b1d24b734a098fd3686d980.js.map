{"version":3,"file":"chunks/app_components_modals_demoSignUp_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"glBAYe,SAASA,GAAwB,SAC9CC,EAD8C,YAE9CC,EAF8C,SAG9CC,IAEA,OACE,QAAC,EAAAC,SAAD,YACE,QAACC,EAAD,CAAkBC,IAAKC,EAAUC,MAAOP,IACvCE,GACD,QAACM,EAAD,CAAoBH,IAAKI,EAAYF,MAAON,OAT1BF,EAAAA,YAAAA,0BAcxB,MAAMK,GAAmB,OAAO,MAAP,sBAAH,4BAEXM,GAAKA,EAAEH,OAFI,uCAQhBC,GAAqB,OAAO,MAAP,sBAAH,4BAEbE,GAAKA,EAAEH,OAFM,yCAQxBR,EAAwBY,aAAe,CACrCX,SAAU,QACVC,YAAa,S,mIC9Bf,MAAMW,EAAkB,EAAEC,WAAAA,MACxB,MAAMC,GAAiBC,EAAAA,EAAAA,KACjBC,GAA2BC,EAAAA,EAAAA,IAAoB,GAC/CC,EAAY,4BAAH,OAA+BJ,GAA/B,OAAgDE,GAE/D,OACE,QAACjB,EAAD,WACE,0BACE,QAACoB,EAAD,YACE,QAACC,EAAD,WAAYC,EAAAA,EAAAA,GAAE,qBACd,wBAAKA,EAAAA,EAAAA,GAAE,8BACP,uBACGA,EAAAA,EAAAA,GACC,+HAIN,QAACC,EAAD,CAAiBC,IAAK,EAAtB,WACE,QAAC,KAAD,CACEC,SAAS,UACTC,KAAMP,EACNQ,QAAS,KACPC,EAAAA,EAAAA,IAA4B,mCAAoC,CAC9DC,aAAc,OALpB,UASGP,EAAAA,EAAAA,GAAE,kBAEL,QAAC,KAAD,CACEG,SAAS,UACTE,QAAS,MACPC,EAAAA,EAAAA,IAA4B,qCAAsC,CAChEC,aAAc,OAEhBf,KANJ,UASGQ,EAAAA,EAAAA,GAAE,6BAtCTT,EAAAA,YAAAA,kBA8CN,MAAMO,GAAiB,OAAO,MAAP,sBAAH,YACPU,EAAAA,EAAAA,GAAM,GADC,mBAGHnB,GAAKA,EAAEoB,MAAMC,gBAHV,mCAWPC,EAAW,CAAH,2HAUfZ,GAAY,OAAO,KAAP,sBAAH,kBACIS,EAAAA,EAAAA,GAAM,GADV,qDAIJnB,GAAKA,EAAEoB,MAAMG,WAJT,eAKAvB,GAAKA,EAAEoB,MAAMI,oBALb,KAQTZ,GAAkB,OAAOa,EAAAA,GAAP,sBAAH,eACLN,EAAAA,EAAAA,GAAM,GADD,2BAKrB,K,mGC3FO,SAASd,IACd,MAAMqB,EAAQC,aAAaC,QAAQ,SAEnC,OADuBF,EAAQ,UAAH,OAAaA,GAAU,GAK9C,SAASnB,EAAoBsB,GAClC,MAAMH,EAAQC,aAAaC,QAAQ,SAC7BE,GAAmBC,EAAAA,EAAAA,GAAU,sBAE7BC,EAAaF,EAAmBA,EAAiBG,WAAW,IAAK,IAAM,GAE7E,GAAIJ,EAAY,CACd,MAAMK,EAAiBR,EAAQ,IAAM,IAErC,OAD4BI,EAAmBI,EAAiB,IACnCF,EAG/B,OADuBF,EAAmB,IAAM,IACxBE,I","sources":["webpack:///./app/components/highlightModalContainer.tsx","webpack:///./app/components/modals/demoSignUp.tsx","webpack:///./app/utils/demoMode.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport BottomLeft from 'sentry-images/pattern/highlight-bottom-left.svg';\nimport TopRight from 'sentry-images/pattern/highlight-top-right.svg';\n\ntype Props = {\n  topWidth: string;\n  bottomWidth: string;\n  children: React.ReactNode;\n};\n\nexport default function HighlightModalContainer({\n  topWidth,\n  bottomWidth,\n  children,\n}: Props) {\n  return (\n    <Fragment>\n      <PositionTopRight src={TopRight} width={topWidth} />\n      {children}\n      <PositionBottomLeft src={BottomLeft} width={bottomWidth} />\n    </Fragment>\n  );\n}\n\nconst PositionTopRight = styled('img')<{width: string}>`\n  position: absolute;\n  width: ${p => p.width};\n  right: 0;\n  top: 0;\n  pointer-events: none;\n`;\n\nconst PositionBottomLeft = styled('img')<{width: string}>`\n  position: absolute;\n  width: ${p => p.width};\n  bottom: 0;\n  left: 0;\n  pointer-events: none;\n`;\n\nHighlightModalContainer.defaultProps = {\n  topWidth: '400px',\n  bottomWidth: '200px',\n};\n","import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'app/actionCreators/modal';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport HighlightModalContainer from 'app/components/highlightModalContainer';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {trackAdvancedAnalyticsEvent} from 'app/utils/advancedAnalytics';\nimport {emailQueryParameter, extraQueryParameter} from 'app/utils/demoMode';\n\ntype Props = ModalRenderProps;\n\nconst DemoSignUpModal = ({closeModal}: Props) => {\n  const queryParameter = emailQueryParameter();\n  const getStartedExtraParameter = extraQueryParameter(true);\n  const signupUrl = `https://sentry.io/signup/${queryParameter}${getStartedExtraParameter}`;\n\n  return (\n    <HighlightModalContainer>\n      <div>\n        <TrialCheckInfo>\n          <Subheader>{t('Sandbox Signup')}</Subheader>\n          <h2>{t('Hey, love what you see?')}</h2>\n          <p>\n            {t(\n              'Sign up now to setup your own project to see problems within your code and learn how to quickly improve your project.'\n            )}\n          </p>\n        </TrialCheckInfo>\n        <StyledButtonBar gap={2}>\n          <Button\n            priority=\"primary\"\n            href={signupUrl}\n            onClick={() =>\n              trackAdvancedAnalyticsEvent('growth.demo_modal_clicked_signup', {\n                organization: null,\n              })\n            }\n          >\n            {t('Sign up now')}\n          </Button>\n          <Button\n            priority=\"default\"\n            onClick={() => {\n              trackAdvancedAnalyticsEvent('growth.demo_modal_clicked_continue', {\n                organization: null,\n              });\n              closeModal();\n            }}\n          >\n            {t('Keep Exploring')}\n          </Button>\n        </StyledButtonBar>\n      </div>\n    </HighlightModalContainer>\n  );\n};\n\nconst TrialCheckInfo = styled('div')`\n  padding: ${space(3)} 0;\n  p {\n    font-size: ${p => p.theme.fontSizeMedium};\n    margin: 0;\n  }\n  h2 {\n    font-size: 1.5em;\n  }\n`;\n\nexport const modalCss = css`\n  width: 100%;\n  max-width: 730px;\n  [role='document'] {\n    position: relative;\n    padding: 70px 80px;\n    overflow: hidden;\n  }\n`;\n\nconst Subheader = styled('h4')`\n  margin-bottom: ${space(2)};\n  text-transform: uppercase;\n  font-weight: bold;\n  color: ${p => p.theme.purple300};\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  margin-top: ${space(2)};\n  max-width: fit-content;\n`;\n\nexport default DemoSignUpModal;\n","import getCookie from 'app/utils/getCookie';\n\n// return email query parameter\nexport function emailQueryParameter(): string {\n  const email = localStorage.getItem('email');\n  const queryParameter = email ? `?email=${email}` : '';\n  return queryParameter;\n}\n\n// return extra query depending, depending on if used in getStartedUrl\nexport function extraQueryParameter(getStarted: boolean): string {\n  const email = localStorage.getItem('email');\n  const extraQueryString = getCookie('extra_query_string');\n  // cookies that have = sign are quotes so extra quotes need to be removed\n  const extraQuery = extraQueryString ? extraQueryString.replaceAll('\"', '') : '';\n\n  if (getStarted) {\n    const emailSeparator = email ? '&' : '?';\n    const getStartedSeparator = extraQueryString ? emailSeparator : '';\n    return getStartedSeparator + extraQuery;\n  }\n  const extraSeparator = extraQueryString ? `?` : '';\n  return extraSeparator + extraQuery;\n}\n"],"names":["HighlightModalContainer","topWidth","bottomWidth","children","Fragment","PositionTopRight","src","TopRight","width","PositionBottomLeft","BottomLeft","p","defaultProps","DemoSignUpModal","closeModal","queryParameter","emailQueryParameter","getStartedExtraParameter","extraQueryParameter","signupUrl","TrialCheckInfo","Subheader","t","StyledButtonBar","gap","priority","href","onClick","trackAdvancedAnalyticsEvent","organization","space","theme","fontSizeMedium","modalCss","purple300","fontSizeExtraSmall","ButtonBar","email","localStorage","getItem","getStarted","extraQueryString","getCookie","extraQuery","replaceAll","emailSeparator"],"sourceRoot":""}