{"version":3,"file":"chunks/app_views_settings_project_projectKeys_details_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/forms/booleanField.tsx","webpack:///./app/views/settings/components/forms/textField.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/project/projectKeys/details/keyRateLimitsForm.tsx","webpack:///./app/views/settings/project/projectKeys/details/keySettings.tsx","webpack:///./app/views/settings/project/projectKeys/details/keyStats.tsx","webpack:///./app/views/settings/project/projectKeys/details/index.tsx","webpack:///./app/views/settings/project/projectKeys/projectKeyCredentials.tsx"],"sourcesContent":["import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport Confirm from 'app/components/confirm';\nimport Switch from 'app/components/switchButton';\nimport InputField, {onEvent} from 'app/views/settings/components/forms/inputField';\n\ntype Props = {\n  confirm?: {\n    true?: React.ReactNode;\n    false?: React.ReactNode;\n  };\n} & InputField['props'];\n\nexport default class BooleanField extends React.Component<Props> {\n  coerceValue(value: any) {\n    return !!value;\n  }\n\n  handleChange = (\n    value: any,\n    onChange: onEvent,\n    onBlur: onEvent,\n    e: React.FormEvent<HTMLInputElement>\n  ) => {\n    // We need to toggle current value because Switch is not an input\n    const newValue = this.coerceValue(!value);\n    onChange(newValue, e);\n    onBlur(newValue, e);\n  };\n\n  render() {\n    const {confirm, ...fieldProps} = this.props;\n\n    return (\n      <InputField\n        {...fieldProps}\n        resetOnError\n        field={({\n          onChange,\n          onBlur,\n          value,\n          disabled,\n          ...props\n        }: {\n          onChange: onEvent;\n          onBlur: onEvent;\n          value: any;\n          disabled: boolean;\n        }) => {\n          // Create a function with required args bound\n          const handleChange = this.handleChange.bind(this, value, onChange, onBlur);\n\n          const switchProps = {\n            ...props,\n            size: 'lg' as React.ComponentProps<typeof Switch>['size'],\n            isActive: !!value,\n            isDisabled: disabled,\n            toggle: handleChange,\n          };\n\n          if (confirm) {\n            return (\n              <Confirm\n                renderMessage={() => confirm[(!value).toString()]}\n                onConfirm={() => handleChange({})}\n              >\n                {({open}) => (\n                  <Switch\n                    {...switchProps}\n                    toggle={(e: React.MouseEvent) => {\n                      // If we have a `confirm` prop and enabling switch\n                      // Then show confirm dialog, otherwise propagate change as normal\n                      if (confirm[(!value).toString()]) {\n                        // Open confirm modal\n                        open();\n                        return;\n                      }\n\n                      handleChange(e);\n                    }}\n                  />\n                )}\n              </Confirm>\n            );\n          }\n\n          return <Switch {...switchProps} />;\n        }}\n      />\n    );\n  }\n}\n","import InputField from 'app/views/settings/components/forms/inputField';\n\ntype Props = InputField['props'];\n\nexport default function TextField(props: Omit<Props, 'type'>) {\n  return <InputField {...props} type=\"text\" />;\n}\n","import * as React from 'react';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import * as React from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Feature from 'app/components/acl/feature';\nimport FeatureDisabled from 'app/components/acl/featureDisabled';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport {IconFlag} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport InputControl from 'app/views/settings/components/forms/controls/input';\nimport RangeSlider from 'app/views/settings/components/forms/controls/rangeSlider';\nimport Form from 'app/views/settings/components/forms/form';\nimport FormField from 'app/views/settings/components/forms/formField';\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\n\nconst RATE_LIMIT_FORMAT_MAP = new Map([\n  [0, 'None'],\n  [60, '1 minute'],\n  [300, '5 minutes'],\n  [900, '15 minutes'],\n  [3600, '1 hour'],\n  [7200, '2 hours'],\n  [14400, '4 hours'],\n  [21600, '6 hours'],\n  [43200, '12 hours'],\n  [86400, '24 hours'],\n]);\n\ntype RateLimitValue = {\n  window: number;\n  count: number;\n};\n\n// This value isn't actually any, but the various angles on the types don't line up.\nconst formatRateLimitWindow = (val: any) => RATE_LIMIT_FORMAT_MAP.get(val);\n\ntype Props = {\n  data: ProjectKey;\n  disabled: boolean;\n} & Pick<\n  RouteComponentProps<\n    {\n      keyId: string;\n      orgId: string;\n      projectId: string;\n    },\n    {}\n  >,\n  'params'\n>;\n\nclass KeyRateLimitsForm extends React.Component<Props> {\n  handleChangeWindow = (\n    onChange,\n    onBlur,\n    currentValueObj: RateLimitValue,\n    value: number,\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const valueObj = {\n      ...currentValueObj,\n      window: value,\n    };\n    onChange(valueObj, e);\n    onBlur(valueObj, e);\n  };\n\n  handleChangeCount = (\n    cb,\n    value: RateLimitValue,\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const valueObj = {\n      ...value,\n      count: e.target.value,\n    };\n\n    cb(valueObj, e);\n  };\n\n  render() {\n    const {data, disabled} = this.props;\n    const {keyId, orgId, projectId} = this.props.params;\n    const apiEndpoint = `/projects/${orgId}/${projectId}/keys/${keyId}/`;\n\n    const disabledAlert = ({features}) => (\n      <FeatureDisabled\n        alert={PanelAlert}\n        features={features}\n        featureName={t('Key Rate Limits')}\n      />\n    );\n\n    return (\n      <Form saveOnBlur apiEndpoint={apiEndpoint} apiMethod=\"PUT\" initialData={data}>\n        <Feature\n          features={['projects:rate-limits']}\n          hookName=\"feature-disabled:rate-limits\"\n          renderDisabled={({children, ...props}) =>\n            typeof children === 'function' &&\n            children({...props, renderDisabled: disabledAlert})\n          }\n        >\n          {({hasFeature, features, organization, project, renderDisabled}) => (\n            <Panel>\n              <PanelHeader>{t('Rate Limits')}</PanelHeader>\n\n              <PanelBody>\n                <PanelAlert type=\"info\" icon={<IconFlag size=\"md\" />}>\n                  {t(\n                    `Rate limits provide a flexible way to manage your error\n                      volume. If you have a noisy project or environment you\n                      can configure a rate limit for this key to reduce the\n                      number of errors processed. To manage your transaction\n                      volume, we recommend adjusting your sample rate in your\n                      SDK configuration.`\n                  )}\n                </PanelAlert>\n                {!hasFeature &&\n                  typeof renderDisabled === 'function' &&\n                  renderDisabled({\n                    organization,\n                    project,\n                    features,\n                    hasFeature,\n                    children: null,\n                  })}\n                <FormField\n                  className=\"rate-limit-group\"\n                  name=\"rateLimit\"\n                  label={t('Rate Limit')}\n                  disabled={disabled || !hasFeature}\n                  validate={({form}) => {\n                    // TODO(TS): is validate actually doing anything because it's an unexpected prop\n                    const isValid =\n                      form &&\n                      form.rateLimit &&\n                      typeof form.rateLimit.count !== 'undefined' &&\n                      typeof form.rateLimit.window !== 'undefined';\n\n                    if (isValid) {\n                      return [];\n                    }\n\n                    return [['rateLimit', t('Fill in both fields first')]];\n                  }}\n                  formatMessageValue={(value: RateLimitValue) => {\n                    return t(\n                      '%s errors in %s',\n                      value.count,\n                      formatRateLimitWindow(value.window)\n                    );\n                  }}\n                  help={t(\n                    'Apply a rate limit to this credential to cap the amount of errors accepted during a time window.'\n                  )}\n                  inline={false}\n                >\n                  {({onChange, onBlur, value}) => (\n                    <RateLimitRow>\n                      <InputControl\n                        type=\"number\"\n                        name=\"rateLimit.count\"\n                        min={0}\n                        value={value && value.count}\n                        placeholder={t('Count')}\n                        disabled={disabled || !hasFeature}\n                        onChange={this.handleChangeCount.bind(this, onChange, value)}\n                        onBlur={this.handleChangeCount.bind(this, onBlur, value)}\n                      />\n                      <EventsIn>{t('event(s) in')}</EventsIn>\n                      <RangeSlider\n                        name=\"rateLimit.window\"\n                        allowedValues={Array.from(RATE_LIMIT_FORMAT_MAP.keys())}\n                        value={value && value.window}\n                        placeholder={t('Window')}\n                        formatLabel={formatRateLimitWindow}\n                        disabled={disabled || !hasFeature}\n                        onChange={this.handleChangeWindow.bind(\n                          this,\n                          onChange,\n                          onBlur,\n                          value\n                        )}\n                      />\n                    </RateLimitRow>\n                  )}\n                </FormField>\n              </PanelBody>\n            </Panel>\n          )}\n        </Feature>\n      </Form>\n    );\n  }\n}\n\nexport default KeyRateLimitsForm;\n\nconst RateLimitRow = styled('div')`\n  display: grid;\n  grid-template-columns: 2fr 1fr 2fr;\n  align-items: center;\n  grid-gap: ${space(1)};\n`;\n\nconst EventsIn = styled('small')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  text-align: center;\n  white-space: nowrap;\n`;\n","import {Component, Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport Access from 'app/components/acl/access';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport DateTime from 'app/components/dateTime';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport {IconFlag} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport BooleanField from 'app/views/settings/components/forms/booleanField';\nimport Field from 'app/views/settings/components/forms/field';\nimport Form from 'app/views/settings/components/forms/form';\nimport SelectField from 'app/views/settings/components/forms/selectField';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\nimport TextField from 'app/views/settings/components/forms/textField';\nimport KeyRateLimitsForm from 'app/views/settings/project/projectKeys/details/keyRateLimitsForm';\nimport ProjectKeyCredentials from 'app/views/settings/project/projectKeys/projectKeyCredentials';\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\n\ntype Props = {\n  api: Client;\n  data: ProjectKey;\n  onRemove: () => void;\n} & Pick<\n  RouteComponentProps<\n    {\n      keyId: string;\n      orgId: string;\n      projectId: string;\n    },\n    {}\n  >,\n  'params'\n>;\n\ntype State = {\n  loading: boolean;\n  error: boolean;\n};\n\nclass KeySettings extends Component<Props, State> {\n  state: State = {\n    loading: false,\n    error: false,\n  };\n\n  handleRemove = async () => {\n    if (this.state.loading) {\n      return;\n    }\n\n    addLoadingMessage(t('Revoking key\\u2026'));\n    const {api, onRemove, params} = this.props;\n    const {keyId, orgId, projectId} = params;\n\n    try {\n      await api.requestPromise(`/projects/${orgId}/${projectId}/keys/${keyId}/`, {\n        method: 'DELETE',\n      });\n\n      onRemove();\n      addSuccessMessage(t('Revoked key'));\n    } catch (_err) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n      addErrorMessage(t('Unable to revoke key'));\n    }\n  };\n\n  render() {\n    const {keyId, orgId, projectId} = this.props.params;\n    const {data} = this.props;\n    const apiEndpoint = `/projects/${orgId}/${projectId}/keys/${keyId}/`;\n    const loaderLink = getDynamicText({\n      value: data.dsn.cdn,\n      fixed: '__JS_SDK_LOADER_URL__',\n    });\n\n    return (\n      <Access access={['project:write']}>\n        {({hasAccess}) => (\n          <Fragment>\n            <Form\n              saveOnBlur\n              allowUndo\n              apiEndpoint={apiEndpoint}\n              apiMethod=\"PUT\"\n              initialData={data}\n            >\n              <Panel>\n                <PanelHeader>{t('Details')}</PanelHeader>\n\n                <PanelBody>\n                  <TextField\n                    name=\"name\"\n                    label={t('Name')}\n                    disabled={!hasAccess}\n                    required={false}\n                    maxLength={64}\n                  />\n                  <BooleanField\n                    name=\"isActive\"\n                    label={t('Enabled')}\n                    required={false}\n                    disabled={!hasAccess}\n                    help=\"Accept events from this key? This may be used to temporarily suspend a key.\"\n                  />\n                  <Field label={t('Created')}>\n                    <div className=\"controls\">\n                      <DateTime date={data.dateCreated} />\n                    </div>\n                  </Field>\n                </PanelBody>\n              </Panel>\n            </Form>\n\n            <KeyRateLimitsForm\n              params={this.props.params}\n              data={data}\n              disabled={!hasAccess}\n            />\n\n            <Form saveOnBlur apiEndpoint={apiEndpoint} apiMethod=\"PUT\" initialData={data}>\n              <Panel>\n                <PanelHeader>{t('JavaScript Loader')}</PanelHeader>\n                <PanelBody>\n                  <Field\n                    help={tct(\n                      'Copy this script into your website to setup your JavaScript SDK without any additional configuration. [link]',\n                      {\n                        link: (\n                          <ExternalLink href=\"https://docs.sentry.io/platforms/javascript/install/lazy-load-sentry/\">\n                            What does the script provide?\n                          </ExternalLink>\n                        ),\n                      }\n                    )}\n                    inline={false}\n                    flexibleControlStateSize\n                  >\n                    <TextCopyInput>\n                      {`<script src='${loaderLink}' crossorigin=\"anonymous\"></script>`}\n                    </TextCopyInput>\n                  </Field>\n                  <SelectField\n                    name=\"browserSdkVersion\"\n                    choices={data.browserSdk ? data.browserSdk.choices : []}\n                    placeholder={t('4.x')}\n                    allowClear={false}\n                    enabled={!hasAccess}\n                    help={t(\n                      'Select the version of the SDK that should be loaded. Note that it can take a few minutes until this change is live.'\n                    )}\n                  />\n                </PanelBody>\n              </Panel>\n            </Form>\n\n            <Panel>\n              <PanelHeader>{t('Credentials')}</PanelHeader>\n              <PanelBody>\n                <PanelAlert type=\"info\" icon={<IconFlag size=\"md\" />}>\n                  {t(\n                    'Your credentials are coupled to a public and secret key. Different clients will require different credentials, so make sure you check the documentation before plugging things in.'\n                  )}\n                </PanelAlert>\n\n                <ProjectKeyCredentials\n                  projectId={`${data.projectId}`}\n                  data={data}\n                  showPublicKey\n                  showSecretKey\n                  showProjectId\n                />\n              </PanelBody>\n            </Panel>\n\n            <Access access={['project:admin']}>\n              <Panel>\n                <PanelHeader>{t('Revoke Key')}</PanelHeader>\n                <PanelBody>\n                  <Field\n                    label={t('Revoke Key')}\n                    help={t(\n                      'Revoking this key will immediately remove and suspend the credentials. This action is irreversible.'\n                    )}\n                  >\n                    <div>\n                      <Confirm\n                        priority=\"danger\"\n                        message={t(\n                          'Are you sure you want to revoke this key? This will immediately remove and suspend the credentials.'\n                        )}\n                        onConfirm={this.handleRemove}\n                        confirmText={t('Revoke Key')}\n                      >\n                        <Button priority=\"danger\">{t('Revoke Key')}</Button>\n                      </Confirm>\n                    </div>\n                  </Field>\n                </PanelBody>\n              </Panel>\n            </Access>\n          </Fragment>\n        )}\n      </Access>\n    );\n  }\n}\n\nexport default KeySettings;\n","import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {Client} from 'app/api';\nimport MiniBarChart from 'app/components/charts/miniBarChart';\nimport LoadingError from 'app/components/loadingError';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport Placeholder from 'app/components/placeholder';\nimport {t} from 'app/locale';\nimport {Series} from 'app/types/echarts';\nimport theme from 'app/utils/theme';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\ntype Props = {\n  api: Client;\n} & Pick<\n  RouteComponentProps<\n    {\n      keyId: string;\n      orgId: string;\n      projectId: string;\n    },\n    {}\n  >,\n  'params'\n>;\n\ntype State = {\n  since: number;\n  until: number;\n  loading: boolean;\n  error: boolean;\n  series: Series[];\n  emptyStats: boolean;\n};\n\nconst getInitialState = (): State => {\n  const until = Math.floor(new Date().getTime() / 1000);\n  return {\n    since: until - 3600 * 24 * 30,\n    until,\n    loading: true,\n    error: false,\n    series: [],\n    emptyStats: false,\n  };\n};\n\nclass KeyStats extends Component<Props, State> {\n  state = getInitialState();\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    const {keyId, orgId, projectId} = this.props.params;\n    this.props.api.request(`/projects/${orgId}/${projectId}/keys/${keyId}/stats/`, {\n      query: {\n        since: this.state.since,\n        until: this.state.until,\n        resolution: '1d',\n      },\n      success: data => {\n        let emptyStats = true;\n        const dropped: Series['data'] = [];\n        const accepted: Series['data'] = [];\n        data.forEach(p => {\n          if (p.total) {\n            emptyStats = false;\n          }\n          dropped.push({name: p.ts * 1000, value: p.dropped});\n          accepted.push({name: p.ts * 1000, value: p.accepted});\n        });\n        const series = [\n          {\n            seriesName: t('Accepted'),\n            data: accepted,\n          },\n          {\n            seriesName: t('Rate Limited'),\n            data: dropped,\n          },\n        ];\n        this.setState({\n          series,\n          emptyStats,\n          error: false,\n          loading: false,\n        });\n      },\n      error: () => {\n        this.setState({error: true, loading: false});\n      },\n    });\n  };\n\n  render() {\n    if (this.state.error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Key usage in the last 30 days (by day)')}</PanelHeader>\n        <PanelBody withPadding>\n          {this.state.loading ? (\n            <Placeholder height=\"150px\" />\n          ) : !this.state.emptyStats ? (\n            <MiniBarChart\n              isGroupedByDate\n              series={this.state.series}\n              height={150}\n              colors={[theme.gray200, theme.red300]}\n              stacked\n              labelYAxisExtents\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing recorded in the last 30 days.')}\n              description={t('Total events captured using these credentials.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default KeyStats;\n","import {browserHistory, RouteComponentProps} from 'react-router';\n\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'app/views/settings/project/permissionAlert';\nimport KeySettings from 'app/views/settings/project/projectKeys/details/keySettings';\nimport KeyStats from 'app/views/settings/project/projectKeys/details/keyStats';\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\n\ntype Props = RouteComponentProps<\n  {\n    keyId: string;\n    orgId: string;\n    projectId: string;\n  },\n  {}\n>;\n\ntype State = {\n  data: ProjectKey;\n} & AsyncView['state'];\n\nexport default class ProjectKeyDetails extends AsyncView<Props, State> {\n  getTitle() {\n    return t('Key Details');\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {keyId, orgId, projectId} = this.props.params;\n    return [['data', `/projects/${orgId}/${projectId}/keys/${keyId}/`]];\n  }\n\n  handleRemove = () => {\n    const {orgId, projectId} = this.props.params;\n    browserHistory.push(`/${orgId}/${projectId}/settings/keys/`);\n  };\n\n  renderBody() {\n    const {data} = this.state;\n    const {params} = this.props;\n\n    return (\n      <div data-test-id=\"key-details\">\n        <SettingsPageHeader title={t('Key Details')} />\n        <PermissionAlert />\n\n        <KeyStats api={this.api} params={params} />\n\n        <KeySettings\n          api={this.api}\n          params={params}\n          data={data}\n          onRemove={this.handleRemove}\n        />\n      </div>\n    );\n  }\n}\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport Link from 'app/components/links/link';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport Field from 'app/views/settings/components/forms/field';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\n\nconst DEFAULT_PROPS = {\n  showDsn: true,\n  showDsnPublic: true,\n  showSecurityEndpoint: true,\n  showMinidump: true,\n  showUnreal: true,\n  showPublicKey: false,\n  showSecretKey: false,\n  showProjectId: false,\n};\n\ntype Props = {\n  projectId: string;\n  data: ProjectKey;\n} & typeof DEFAULT_PROPS;\n\ntype State = {\n  showDeprecatedDsn: boolean;\n};\n\nclass ProjectKeyCredentials extends Component<Props, State> {\n  static defaultProps = DEFAULT_PROPS;\n\n  state: State = {\n    showDeprecatedDsn: false,\n  };\n\n  toggleDeprecatedDsn = () => {\n    this.setState(state => ({\n      showDeprecatedDsn: !state.showDeprecatedDsn,\n    }));\n  };\n\n  render() {\n    const {showDeprecatedDsn} = this.state;\n    const {\n      projectId,\n      data,\n      showDsn,\n      showDsnPublic,\n      showSecurityEndpoint,\n      showMinidump,\n      showUnreal,\n      showPublicKey,\n      showSecretKey,\n      showProjectId,\n    } = this.props;\n\n    return (\n      <Fragment>\n        {showDsnPublic && (\n          <Field\n            label={t('DSN')}\n            inline={false}\n            flexibleControlStateSize\n            help={tct('The DSN tells the SDK where to send the events to. [link]', {\n              link: showDsn ? (\n                <Link to=\"\" onClick={this.toggleDeprecatedDsn}>\n                  {showDeprecatedDsn\n                    ? t('Hide deprecated DSN')\n                    : t('Show deprecated DSN')}\n                </Link>\n              ) : null,\n            })}\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.public,\n                fixed: '__DSN__',\n              })}\n            </TextCopyInput>\n            {showDeprecatedDsn && (\n              <StyledField\n                label={null}\n                help={t(\n                  'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n                )}\n                inline={false}\n                flexibleControlStateSize\n              >\n                <TextCopyInput>\n                  {getDynamicText({\n                    value: data.dsn.secret,\n                    fixed: '__DSN_DEPRECATED__',\n                  })}\n                </TextCopyInput>\n              </StyledField>\n            )}\n          </Field>\n        )}\n\n        {/* this edge case should imho not happen, but just to be sure */}\n        {!showDsnPublic && showDsn && (\n          <Field\n            label={t('DSN (Deprecated)')}\n            help={t(\n              'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.secret,\n                fixed: '__DSN_DEPRECATED__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showSecurityEndpoint && (\n          <Field\n            label={t('Security Header Endpoint')}\n            help={t(\n              'Use your security header endpoint for features like CSP and Expect-CT reports.'\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.security,\n                fixed: '__SECURITY_HEADER_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showMinidump && (\n          <Field\n            label={t('Minidump Endpoint')}\n            help={tct(\n              'Use this endpoint to upload [link], for example with Electron, Crashpad or Breakpad.',\n              {\n                link: (\n                  <ExternalLink href=\"https://docs.sentry.io/platforms/native/guides/minidumps/\">\n                    minidump crash reports\n                  </ExternalLink>\n                ),\n              }\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.minidump,\n                fixed: '__MINIDUMP_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showUnreal && (\n          <Field\n            label={t('Unreal Engine 4 Endpoint')}\n            help={t('Use this endpoint to configure your UE4 Crash Reporter.')}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.unreal || '',\n                fixed: '__UNREAL_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showPublicKey && (\n          <Field label={t('Public Key')} inline flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.public,\n                fixed: '__PUBLICKEY__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showSecretKey && (\n          <Field label={t('Secret Key')} inline flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.secret,\n                fixed: '__SECRETKEY__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showProjectId && (\n          <Field label={t('Project ID')} inline flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: projectId,\n                fixed: '__PROJECTID__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst StyledField = styled(Field)`\n  padding: ${space(0.5)} 0 0 0;\n`;\n\nexport default ProjectKeyCredentials;\n"],"names":["AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","BooleanField","React","value","onChange","onBlur","e","newValue","coerceValue","confirm","fieldProps","props","resetOnError","field","disabled","handleChange","bind","switchProps","size","isActive","isDisabled","toggle","renderMessage","toString","onConfirm","open","TextField","type","PermissionAlert","access","hasAccess","icon","t","RATE_LIMIT_FORMAT_MAP","Map","formatRateLimitWindow","val","get","KeyRateLimitsForm","currentValueObj","valueObj","window","cb","count","target","data","keyId","orgId","projectId","params","apiEndpoint","disabledAlert","features","alert","PanelAlert","featureName","saveOnBlur","apiMethod","initialData","hookName","renderDisabled","children","hasFeature","organization","project","className","name","label","validate","form","rateLimit","formatMessageValue","help","inline","RateLimitRow","min","placeholder","handleChangeCount","EventsIn","allowedValues","Array","from","keys","formatLabel","handleChangeWindow","space","p","theme","fontSizeRelativeSmall","KeySettings","Component","loading","error","async","state","addLoadingMessage","api","onRemove","requestPromise","method","addSuccessMessage","_err","setState","addErrorMessage","loaderLink","getDynamicText","dsn","cdn","fixed","Fragment","allowUndo","required","maxLength","date","dateCreated","tct","link","href","flexibleControlStateSize","choices","browserSdk","allowClear","enabled","showPublicKey","showSecretKey","showProjectId","priority","message","handleRemove","confirmText","KeyStats","until","Math","floor","Date","getTime","since","series","emptyStats","getInitialState","request","query","resolution","success","dropped","accepted","forEach","total","push","ts","seriesName","componentDidMount","fetchData","onRetry","withPadding","height","description","isGroupedByDate","colors","stacked","labelYAxisExtents","ProjectKeyDetails","browserHistory","getEndpoints","renderBody","ProjectKeyCredentials","showDeprecatedDsn","showDsn","showDsnPublic","showSecurityEndpoint","showMinidump","showUnreal","to","onClick","toggleDeprecatedDsn","public","StyledField","secret","security","minidump","unreal","Field"],"sourceRoot":""}