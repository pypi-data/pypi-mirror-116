{"version":3,"file":"chunks/app_views_organizationGroupDetails_grouping_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/pagination/paginationCaption.tsx","webpack:///./app/views/organizationGroupDetails/grouping/errorMessage.tsx","webpack:///./app/views/organizationGroupDetails/grouping/newIssue.tsx","webpack:///./app/views/organizationGroupDetails/grouping/grouping.tsx","webpack:///./app/views/organizationGroupDetails/grouping/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\n\ntype Props = {\n  caption: React.ReactNode;\n};\n\nfunction PaginationCaption({caption}: Props) {\n  return <Wrapper>{caption}</Wrapper>;\n}\n\nexport default PaginationCaption;\n\nconst Wrapper = styled('span')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-right: ${space(2)};\n`;\n","import React from 'react';\n\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport LoadingError from 'app/components/loadingError';\nimport {Panel} from 'app/components/panels';\nimport {t, tct} from 'app/locale';\nimport {Group, Organization, Project} from 'app/types';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\ntype ErrorCode =\n  | 'issue_not_hierarchical'\n  | 'project_not_hierarchical'\n  | 'no_events'\n  | 'merged_issues'\n  | 'missing_feature';\n\ntype Error = {\n  status: number;\n  responseJSON?: {\n    detail: {\n      code: ErrorCode;\n      extra: Record<string, any>;\n      message: string;\n    };\n  };\n};\n\ntype Props = {\n  error: Error | string;\n  groupId: Group['id'];\n  orgSlug: Organization['slug'];\n  projSlug: Project['slug'];\n  onRetry: () => void;\n};\n\nfunction ErrorMessage({error, groupId, onRetry, orgSlug, projSlug}: Props) {\n  function getErrorDetails(errorCode: ErrorCode) {\n    switch (errorCode) {\n      case 'merged_issues':\n        return {\n          title: t('Grouping breakdown is not available in this issue'),\n          subTitle: t(\n            'This issue needs to be fully unmerged before grouping breakdown is available'\n          ),\n          action: (\n            <Button\n              priority=\"primary\"\n              to={`/organizations/sentry/issues/${groupId}/merged/?${location.search}`}\n            >\n              {t('Unmerge issue')}\n            </Button>\n          ),\n        };\n      case 'missing_feature':\n        return {\n          title: t(\n            'This project does not have the grouping breakdown available. Is your organization still an early adopter?'\n          ),\n        };\n\n      case 'no_events':\n        return {\n          title: t('This issue has no events'),\n        };\n      case 'issue_not_hierarchical':\n        return {\n          title: t('Grouping breakdown is not available in this issue'),\n          subTitle: t(\n            'Only new issues with the latest grouping strategy have this feature available'\n          ),\n        };\n      case 'project_not_hierarchical':\n        return {\n          title: t('Update your Grouping Config'),\n          subTitle: (\n            <React.Fragment>\n              <p>\n                {t(\n                  'Enable advanced grouping insights and functionality by updating this project to the latest Grouping Config:'\n                )}\n              </p>\n\n              <ul>\n                <li>\n                  {tct(\n                    '[strong:Breakdowns:] Explore events in this issue by call hierarchy.',\n                    {strong: <strong />}\n                  )}\n                </li>\n                <li>\n                  {tct(\n                    '[strong:Stack trace annotations:] See important frames Sentry uses to group issues directly in the stack trace.',\n                    {strong: <strong />}\n                  )}\n                </li>\n              </ul>\n            </React.Fragment>\n          ),\n          leftAligned: true,\n          action: (\n            <ButtonBar gap={1}>\n              <Button\n                priority=\"primary\"\n                to={`/settings/${orgSlug}/projects/${projSlug}/issue-grouping/#upgrade-grouping`}\n              >\n                {t('Upgrade Grouping Config')}\n              </Button>\n              <Button href=\"https://docs.sentry.io/product/data-management-settings/event-grouping/grouping-breakdown/\">\n                {t('Read the docs')}\n              </Button>\n            </ButtonBar>\n          ),\n        };\n      default:\n        return {};\n    }\n  }\n\n  if (typeof error === 'string') {\n    return <Alert type=\"warning\">{error}</Alert>;\n  }\n\n  if (error.status === 403 && error.responseJSON?.detail) {\n    const {code, message} = error.responseJSON.detail;\n    const {action, title, subTitle, leftAligned} = getErrorDetails(code);\n\n    return (\n      <Panel>\n        <EmptyMessage\n          size=\"large\"\n          title={title ?? message}\n          description={subTitle}\n          action={action}\n          leftAligned={leftAligned}\n        />\n      </Panel>\n    );\n  }\n\n  return (\n    <LoadingError\n      message={t('Unable to load grouping levels, please try again later')}\n      onRetry={onRetry}\n    />\n  );\n}\n\nexport default ErrorMessage;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport EventOrGroupHeader from 'app/components/eventOrGroupHeader';\nimport TimeSince from 'app/components/timeSince';\nimport {IconClock} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization} from 'app/types';\nimport {Event} from 'app/types/event';\n\ntype Props = {\n  sampleEvent: Event;\n  eventCount: number;\n  organization: Organization;\n};\n\nfunction NewIssue({sampleEvent, eventCount, organization}: Props) {\n  return (\n    <Fragment>\n      <EventDetails>\n        <EventOrGroupHeader\n          data={sampleEvent}\n          organization={organization}\n          hideIcons\n          hideLevel\n        />\n        <ExtraInfo>\n          <TimeWrapper>\n            <StyledIconClock size=\"11px\" />\n            <TimeSince date={sampleEvent.dateCreated} suffix={t('old')} />\n          </TimeWrapper>\n        </ExtraInfo>\n      </EventDetails>\n      <EventCount>{eventCount}</EventCount>\n    </Fragment>\n  );\n}\n\nexport default NewIssue;\n\nconst EventDetails = styled('div')`\n  overflow: hidden;\n  line-height: 1.1;\n`;\n\nconst ExtraInfo = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: ${space(2)};\n  justify-content: flex-start;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  grid-gap: ${space(0.5)};\n  grid-template-columns: max-content 1fr;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst EventCount = styled('div')`\n  align-items: center;\n  line-height: 1.1;\n`;\n\nconst StyledIconClock = styled(IconClock)`\n  color: ${p => p.theme.subText};\n`;\n","import React, {useEffect, useState} from 'react';\nimport {InjectedRouter} from 'react-router/lib/Router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport debounce from 'lodash/debounce';\n\nimport {Client} from 'app/api';\nimport ExternalLink from 'app/components/links/externalLink';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport Pagination from 'app/components/pagination';\nimport PaginationCaption from 'app/components/pagination/paginationCaption';\nimport {PanelTable} from 'app/components/panels';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'app/constants';\nimport {IconMegaphone} from 'app/icons';\nimport {t, tct, tn} from 'app/locale';\nimport space from 'app/styles/space';\nimport {BaseGroup, Group, Organization, Project} from 'app/types';\nimport {defined} from 'app/utils';\nimport parseLinkHeader from 'app/utils/parseLinkHeader';\nimport withApi from 'app/utils/withApi';\nimport RangeSlider, {\n  Slider,\n} from 'app/views/settings/components/forms/controls/rangeSlider';\n\nimport ErrorMessage from './errorMessage';\nimport NewIssue from './newIssue';\n\ntype Error = React.ComponentProps<typeof ErrorMessage>['error'];\n\ntype Props = {\n  organization: Organization;\n  groupId: Group['id'];\n  projSlug: Project['slug'];\n  location: Location<{level?: number; cursor?: string}>;\n  api: Client;\n  router: InjectedRouter;\n};\n\ntype GroupingLevelDetails = Partial<Pick<BaseGroup, 'title' | 'metadata'>> & {\n  eventCount: number;\n  hash: string;\n  latestEvent: BaseGroup['latestEvent'];\n};\n\ntype GroupingLevel = {\n  id: number;\n  isCurrent: boolean;\n};\n\nfunction LinkFooter() {\n  return (\n    <Footer>\n      <ExternalLink\n        href={`mailto:grouping@sentry.io?subject=${encodeURIComponent(\n          'Grouping Feedback'\n        )}&body=${encodeURIComponent(\n          `URL: ${window.location.href}\\n\\nThanks for taking the time to provide us feedback. What's on your mind?`\n        )}`}\n      >\n        <StyledIconMegaphone /> {t('Give Feedback')}\n      </ExternalLink>\n    </Footer>\n  );\n}\n\nfunction Grouping({api, groupId, location, organization, router, projSlug}: Props) {\n  const {cursor, level} = location.query;\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGroupingLevelDetailsLoading, setIsGroupingLevelDetailsLoading] =\n    useState(false);\n  const [error, setError] = useState<undefined | Error | string>(undefined);\n  const [groupingLevels, setGroupingLevels] = useState<GroupingLevel[]>([]);\n  const [activeGroupingLevel, setActiveGroupingLevel] = useState<number | undefined>(\n    undefined\n  );\n  const [activeGroupingLevelDetails, setActiveGroupingLevelDetails] = useState<\n    GroupingLevelDetails[]\n  >([]);\n\n  const [pagination, setPagination] = useState('');\n\n  useEffect(() => {\n    fetchGroupingLevels();\n  }, []);\n\n  useEffect(() => {\n    setSecondGrouping();\n  }, [groupingLevels]);\n\n  useEffect(() => {\n    updateUrlWithNewLevel();\n  }, [activeGroupingLevel]);\n\n  useEffect(() => {\n    fetchGroupingLevelDetails();\n  }, [activeGroupingLevel, cursor]);\n\n  const handleSetActiveGroupingLevel = debounce((groupingLevelId: number | '') => {\n    setActiveGroupingLevel(Number(groupingLevelId));\n  }, DEFAULT_DEBOUNCE_DURATION);\n\n  async function fetchGroupingLevels() {\n    setIsLoading(true);\n    setError(undefined);\n    try {\n      const response = await api.requestPromise(`/issues/${groupId}/grouping/levels/`);\n      setIsLoading(false);\n      setGroupingLevels(response.levels);\n    } catch (err) {\n      setIsLoading(false);\n      setError(err);\n    }\n  }\n\n  async function fetchGroupingLevelDetails() {\n    if (!groupingLevels.length || !defined(activeGroupingLevel)) {\n      return;\n    }\n\n    setIsGroupingLevelDetailsLoading(true);\n    setError(undefined);\n\n    try {\n      const [data, , resp] = await api.requestPromise(\n        `/issues/${groupId}/grouping/levels/${activeGroupingLevel}/new-issues/`,\n        {\n          method: 'GET',\n          includeAllArgs: true,\n          query: {\n            ...location.query,\n            per_page: 10,\n          },\n        }\n      );\n\n      const pageLinks = resp?.getResponseHeader?.('Link');\n      setPagination(pageLinks ?? '');\n      setActiveGroupingLevelDetails(Array.isArray(data) ? data : [data]);\n      setIsGroupingLevelDetailsLoading(false);\n    } catch (err) {\n      setIsGroupingLevelDetailsLoading(false);\n      setError(err);\n    }\n  }\n\n  function updateUrlWithNewLevel() {\n    if (!defined(activeGroupingLevel) || level === activeGroupingLevel) {\n      return;\n    }\n\n    router.replace({\n      pathname: location.pathname,\n      query: {...location.query, cursor: undefined, level: activeGroupingLevel},\n    });\n  }\n\n  function setSecondGrouping() {\n    if (!groupingLevels.length) {\n      return;\n    }\n\n    if (defined(level)) {\n      if (!defined(groupingLevels[level])) {\n        setError(t('The level you were looking for was not found.'));\n        return;\n      }\n\n      if (level === activeGroupingLevel) {\n        return;\n      }\n\n      setActiveGroupingLevel(level);\n      return;\n    }\n\n    if (groupingLevels.length > 1) {\n      setActiveGroupingLevel(groupingLevels[1].id);\n      return;\n    }\n\n    setActiveGroupingLevel(groupingLevels[0].id);\n  }\n\n  if (isLoading) {\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return (\n      <React.Fragment>\n        <ErrorMessage\n          onRetry={fetchGroupingLevels}\n          groupId={groupId}\n          error={error}\n          projSlug={projSlug}\n          orgSlug={organization.slug}\n        />\n        <LinkFooter />\n      </React.Fragment>\n    );\n  }\n\n  if (!activeGroupingLevelDetails.length) {\n    return <LoadingIndicator />;\n  }\n\n  const links = parseLinkHeader(pagination);\n  const hasMore = links.previous?.results || links.next?.results;\n  const paginationCurrentQuantity = activeGroupingLevelDetails.length;\n\n  return (\n    <Wrapper>\n      <Header>\n        {t(\n          'This issue is an aggregate of multiple events that sentry determined originate from the same root-cause. Use this page to explore more detailed groupings that exist within this issue.'\n        )}\n      </Header>\n      <Body>\n        <SliderWrapper>\n          {t('Fewer issues')}\n          <StyledRangeSlider\n            name=\"grouping-level\"\n            allowedValues={groupingLevels.map(groupingLevel => Number(groupingLevel.id))}\n            value={activeGroupingLevel ?? 0}\n            onChange={handleSetActiveGroupingLevel}\n            showLabel={false}\n          />\n          {t('More issues')}\n        </SliderWrapper>\n        <Content isReloading={isGroupingLevelDetailsLoading}>\n          <StyledPanelTable headers={['', t('Events')]}>\n            {activeGroupingLevelDetails.map(\n              ({hash, title, metadata, latestEvent, eventCount}) => {\n                // XXX(markus): Ugly hack to make NewIssue show the right things.\n                return (\n                  <NewIssue\n                    key={hash}\n                    sampleEvent={{\n                      ...latestEvent,\n                      metadata: metadata || latestEvent.metadata,\n                      title: title || latestEvent.title,\n                    }}\n                    eventCount={eventCount}\n                    organization={organization}\n                  />\n                );\n              }\n            )}\n          </StyledPanelTable>\n          <StyledPagination\n            pageLinks={pagination}\n            disabled={isGroupingLevelDetailsLoading}\n            caption={\n              <PaginationCaption\n                caption={tct('Showing [current] of [total] [result]', {\n                  result: hasMore\n                    ? t('results')\n                    : tn('result', 'results', paginationCurrentQuantity),\n                  current: paginationCurrentQuantity,\n                  total: hasMore\n                    ? `${paginationCurrentQuantity}+`\n                    : paginationCurrentQuantity,\n                })}\n              />\n            }\n          />\n        </Content>\n      </Body>\n      <LinkFooter />\n    </Wrapper>\n  );\n}\n\nexport default withApi(Grouping);\n\nconst StyledIconMegaphone = styled(IconMegaphone)`\n  margin-right: ${space(0.5)};\n`;\n\nconst Wrapper = styled('div')`\n  flex: 1;\n  display: grid;\n  align-content: flex-start;\n  margin: -${space(3)} -${space(4)};\n  padding: ${space(3)} ${space(4)};\n`;\n\nconst Header = styled('p')`\n  && {\n    margin-bottom: ${space(2)};\n  }\n`;\n\nconst Footer = styled('p')`\n  && {\n    margin-top: ${space(2)};\n  }\n`;\n\nconst Body = styled('div')`\n  display: grid;\n  grid-gap: ${space(3)};\n`;\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: 1fr minmax(60px, auto);\n  > * {\n    padding: ${space(1.5)} ${space(2)};\n    :nth-child(-n + 2) {\n      padding: ${space(2)};\n    }\n    :nth-child(2n) {\n      display: flex;\n      text-align: right;\n      justify-content: flex-end;\n    }\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[3]}) {\n    grid-template-columns: 1fr minmax(80px, auto);\n  }\n`;\n\nconst StyledPagination = styled(Pagination)`\n  margin-top: 0;\n`;\n\nconst Content = styled('div')<{isReloading: boolean}>`\n  ${p =>\n    p.isReloading &&\n    `\n      ${StyledPanelTable}, ${StyledPagination} {\n        opacity: 0.5;\n        pointer-events: none;\n      }\n    `}\n`;\n\nconst SliderWrapper = styled('div')`\n  display: grid;\n  grid-gap: ${space(1.5)};\n  grid-template-columns: max-content max-content;\n  justify-content: space-between;\n  align-items: flex-start;\n  position: relative;\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.subText};\n  padding-bottom: ${space(2)};\n\n  @media (min-width: 700px) {\n    grid-template-columns: max-content minmax(270px, auto) max-content;\n    align-items: center;\n    justify-content: flex-start;\n    padding-bottom: 0;\n  }\n`;\n\nconst StyledRangeSlider = styled(RangeSlider)`\n  ${Slider} {\n    background: transparent;\n    margin-top: 0;\n    margin-bottom: 0;\n\n    ::-ms-thumb {\n      box-shadow: 0 0 0 3px ${p => p.theme.backgroundSecondary};\n    }\n\n    ::-moz-range-thumb {\n      box-shadow: 0 0 0 3px ${p => p.theme.backgroundSecondary};\n    }\n\n    ::-webkit-slider-thumb {\n      box-shadow: 0 0 0 3px ${p => p.theme.backgroundSecondary};\n    }\n  }\n\n  position: absolute;\n  bottom: 0;\n  left: ${space(1.5)};\n  right: ${space(1.5)};\n\n  @media (min-width: 700px) {\n    position: static;\n    left: auto;\n    right: auto;\n  }\n`;\n","import {RouteComponentProps} from 'react-router';\n\nimport Feature from 'app/components/acl/feature';\nimport Alert from 'app/components/alert';\nimport {t} from 'app/locale';\nimport {PageContent} from 'app/styles/organization';\nimport {Group, Organization, Project} from 'app/types';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport Grouping from './grouping';\n\ntype Props = RouteComponentProps<{}, {}> & {\n  organization: Organization;\n  group: Group;\n  project: Project;\n};\n\nfunction GroupingContainer({organization, location, group, router, project}: Props) {\n  return (\n    <Feature\n      features={['grouping-tree-ui']}\n      organization={organization}\n      renderDisabled={() => (\n        <PageContent>\n          <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n        </PageContent>\n      )}\n    >\n      <Grouping\n        location={location}\n        groupId={group.id}\n        organization={organization}\n        router={router}\n        projSlug={project.slug}\n      />\n    </Feature>\n  );\n}\n\nexport default withOrganization(GroupingContainer);\n"],"names":["PaginationCaption","caption","Wrapper","p","theme","subText","fontSizeMedium","space","ErrorMessage","error","groupId","onRetry","orgSlug","projSlug","type","status","responseJSON","detail","code","message","action","title","subTitle","leftAligned","errorCode","t","priority","to","location","search","tct","strong","gap","href","getErrorDetails","size","description","NewIssue","sampleEvent","eventCount","organization","Fragment","EventDetails","data","hideIcons","hideLevel","ExtraInfo","TimeWrapper","StyledIconClock","date","dateCreated","suffix","EventCount","fontSizeSmall","IconClock","LinkFooter","Footer","encodeURIComponent","window","StyledIconMegaphone","Grouping","api","router","cursor","level","query","isLoading","setIsLoading","useState","isGroupingLevelDetailsLoading","setIsGroupingLevelDetailsLoading","setError","undefined","groupingLevels","setGroupingLevels","activeGroupingLevel","setActiveGroupingLevel","activeGroupingLevelDetails","setActiveGroupingLevelDetails","pagination","setPagination","useEffect","fetchGroupingLevels","length","defined","id","setSecondGrouping","replace","pathname","async","resp","requestPromise","method","includeAllArgs","per_page","pageLinks","getResponseHeader","Array","isArray","err","fetchGroupingLevelDetails","handleSetActiveGroupingLevel","debounce","groupingLevelId","Number","DEFAULT_DEBOUNCE_DURATION","response","levels","slug","links","parseLinkHeader","hasMore","previous","results","next","paginationCurrentQuantity","Header","Body","SliderWrapper","StyledRangeSlider","name","allowedValues","map","groupingLevel","value","onChange","showLabel","Content","isReloading","StyledPanelTable","headers","hash","metadata","latestEvent","StyledPagination","disabled","result","tn","current","total","withApi","IconMegaphone","PanelTable","breakpoints","Pagination","RangeSlider","Slider","backgroundSecondary","GroupingContainer","group","project","features","renderDisabled","withOrganization"],"sourceRoot":""}