{"version":3,"file":"chunks/app_views_releases_list_releasePromo_tsx-app_views_releases_utils_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/onboardingPanel.tsx","webpack:///./app/views/releases/list/releasePromo.tsx","webpack:///./app/views/releases/list/utils.tsx","webpack:///./app/views/releases/utils/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Panel} from 'app/components/panels';\nimport space from 'app/styles/space';\n\ntype Props = React.PropsWithChildren<{\n  image: React.ReactNode;\n  className?: string;\n}>;\n\nfunction OnboardingPanel({className, image, children}: Props) {\n  return (\n    <Panel className={className}>\n      <Container>\n        <IlloBox>{image}</IlloBox>\n        <StyledBox>{children}</StyledBox>\n      </Container>\n    </Panel>\n  );\n}\n\nconst Container = styled('div')`\n  padding: ${space(3)};\n  position: relative;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n    min-height: 300px;\n    max-width: 1000px;\n    margin: 0 auto;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    min-height: 350px;\n  }\n`;\n\nconst StyledBox = styled('div')`\n  z-index: 1;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    flex: 2;\n  }\n`;\n\nconst IlloBox = styled(StyledBox)`\n  position: relative;\n  min-height: 100px;\n  max-width: 300px;\n  margin: ${space(2)} auto;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    flex: 1;\n    margin: ${space(3)};\n    max-width: auto;\n  }\n`;\n\nexport default OnboardingPanel;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport emptyStateImg from 'sentry-images/spot/releases-empty-state.svg';\nimport commitImage from 'sentry-images/spot/releases-tour-commits.svg';\nimport emailImage from 'sentry-images/spot/releases-tour-email.svg';\nimport resolutionImage from 'sentry-images/spot/releases-tour-resolution.svg';\nimport statsImage from 'sentry-images/spot/releases-tour-stats.svg';\n\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport FeatureTourModal, {\n  TourImage,\n  TourStep,\n  TourText,\n} from 'app/components/modals/featureTourModal';\nimport OnboardingPanel from 'app/components/onboardingPanel';\nimport {t} from 'app/locale';\nimport {Organization} from 'app/types';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\n\nconst releasesSetupUrl = 'https://docs.sentry.io/product/releases/';\n\nconst docsLink = (\n  <Button external href={releasesSetupUrl}>\n    {t('Setup')}\n  </Button>\n);\n\nexport const RELEASES_TOUR_STEPS: TourStep[] = [\n  {\n    title: t('Suspect Commits'),\n    image: <TourImage src={commitImage} />,\n    body: (\n      <TourText>\n        {t(\n          'Sentry suggests which commit caused an issue and who is likely responsible so you can triage.'\n        )}\n      </TourText>\n    ),\n    actions: docsLink,\n  },\n  {\n    title: t('Release Stats'),\n    image: <TourImage src={statsImage} />,\n    body: (\n      <TourText>\n        {t(\n          'Get an overview of the commits in each release, and which issues were introduced or fixed.'\n        )}\n      </TourText>\n    ),\n    actions: docsLink,\n  },\n  {\n    title: t('Easily Resolve'),\n    image: <TourImage src={resolutionImage} />,\n    body: (\n      <TourText>\n        {t(\n          'Automatically resolve issues by including the issue number in your commit message.'\n        )}\n      </TourText>\n    ),\n    actions: docsLink,\n  },\n  {\n    title: t('Deploy Emails'),\n    image: <TourImage src={emailImage} />,\n    body: (\n      <TourText>\n        {t(\n          'Receive email notifications about when your code gets deployed. This can be customized in settings.'\n        )}\n      </TourText>\n    ),\n  },\n];\n\ntype Props = {\n  organization: Organization;\n  projectId?: number;\n};\n\nclass ReleasePromo extends Component<Props> {\n  componentDidMount() {\n    const {organization, projectId} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey: 'releases.landing_card_viewed',\n      eventName: 'Releases: Landing Card Viewed',\n      organization_id: parseInt(organization.id, 10),\n      project_id: projectId,\n    });\n  }\n\n  handleTourAdvance = (step: number, duration: number) => {\n    const {organization, projectId} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey: 'releases.tour.advance',\n      eventName: 'Releases: Tour Advance',\n      organization_id: parseInt(organization.id, 10),\n      project_id: projectId,\n      step,\n      duration,\n    });\n  };\n\n  handleClose = (step: number, duration: number) => {\n    const {organization, projectId} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey: 'releases.tour.close',\n      eventName: 'Releases: Tour Close',\n      organization_id: parseInt(organization.id, 10),\n      project_id: projectId,\n      step,\n      duration,\n    });\n  };\n\n  render() {\n    return (\n      <OnboardingPanel image={<img src={emptyStateImg} />}>\n        <h3>{t('Demystify Releases')}</h3>\n        <p>\n          {t(\n            'Did you know how many errors your latest release triggered? We do. And more, too.'\n          )}\n        </p>\n        <ButtonList gap={1}>\n          <Button priority=\"primary\" href={releasesSetupUrl} external>\n            {t('Start Setup')}\n          </Button>\n          <FeatureTourModal\n            steps={RELEASES_TOUR_STEPS}\n            onAdvance={this.handleTourAdvance}\n            onCloseModal={this.handleClose}\n            doneText={t('Start Setup')}\n            doneUrl={releasesSetupUrl}\n          >\n            {({showModal}) => (\n              <Button priority=\"default\" onClick={showModal}>\n                {t('Take a Tour')}\n              </Button>\n            )}\n          </FeatureTourModal>\n        </ButtonList>\n      </OnboardingPanel>\n    );\n  }\n}\n\nconst ButtonList = styled(ButtonBar)`\n  grid-template-columns: repeat(auto-fit, minmax(130px, max-content));\n`;\n\nexport default ReleasePromo;\n","export enum SortOption {\n  CRASH_FREE_USERS = 'crash_free_users',\n  CRASH_FREE_SESSIONS = 'crash_free_sessions',\n  USERS_24_HOURS = 'users_24h',\n  SESSIONS_24_HOURS = 'sessions_24h',\n  SESSIONS = 'sessions',\n  DATE = 'date',\n  BUILD = 'build',\n  SEMVER = 'semver',\n  ADOPTION = 'adoption',\n}\n\nexport enum DisplayOption {\n  USERS = 'users',\n  SESSIONS = 'sessions',\n}\n\nexport enum StatusOption {\n  ACTIVE = 'active',\n  ARCHIVED = 'archived',\n}\n","import {Location} from 'history';\nimport pick from 'lodash/pick';\nimport round from 'lodash/round';\nimport moment from 'moment';\n\nimport {DateTimeObject} from 'app/components/charts/utils';\nimport {getParams} from 'app/components/organizations/globalSelectionHeader/getParams';\nimport {PAGE_URL_PARAM, URL_PARAM} from 'app/constants/globalSelectionHeader';\nimport {tn} from 'app/locale';\nimport {Release, ReleaseStatus} from 'app/types';\nimport {QueryResults} from 'app/utils/tokenizeSearch';\nimport {IssueSortOptions} from 'app/views/issueList/utils';\n\nimport {DisplayOption} from '../list/utils';\n\nexport const CRASH_FREE_DECIMAL_THRESHOLD = 95;\n\nexport const roundDuration = (seconds: number) => {\n  return round(seconds, seconds > 60 ? 0 : 3);\n};\n\nexport const getCrashFreePercent = (\n  percent: number,\n  decimalThreshold = CRASH_FREE_DECIMAL_THRESHOLD,\n  decimalPlaces = 3\n): number => {\n  return round(percent, percent > decimalThreshold ? decimalPlaces : 0);\n};\n\nexport const displayCrashFreePercent = (\n  percent: number,\n  decimalThreshold = CRASH_FREE_DECIMAL_THRESHOLD,\n  decimalPlaces = 3\n): string => {\n  if (isNaN(percent)) {\n    return '\\u2015';\n  }\n\n  if (percent < 1 && percent > 0) {\n    return `<1\\u0025`;\n  }\n\n  const rounded = getCrashFreePercent(\n    percent,\n    decimalThreshold,\n    decimalPlaces\n  ).toLocaleString();\n\n  return `${rounded}\\u0025`;\n};\n\nexport const getSessionStatusPercent = (percent: number, absolute = true) => {\n  return round(absolute ? Math.abs(percent) : percent, 3);\n};\n\nexport const displaySessionStatusPercent = (percent: number, absolute = true) => {\n  return `${getSessionStatusPercent(percent, absolute).toLocaleString()}\\u0025`;\n};\n\nexport const displayCrashFreeDiff = (\n  diffPercent: number,\n  crashFreePercent?: number | null\n) =>\n  `${Math.abs(\n    round(\n      diffPercent,\n      crashFreePercent && crashFreePercent > CRASH_FREE_DECIMAL_THRESHOLD ? 3 : 0\n    )\n  ).toLocaleString()}\\u0025`;\n\nexport const getReleaseNewIssuesUrl = (\n  orgSlug: string,\n  projectId: string | number | null,\n  version: string\n) => {\n  return {\n    pathname: `/organizations/${orgSlug}/issues/`,\n    query: {\n      project: projectId,\n      // we are resetting time selector because releases' new issues count doesn't take time selector into account\n      statsPeriod: undefined,\n      start: undefined,\n      end: undefined,\n      query: new QueryResults([`firstRelease:${version}`]).formatString(),\n      sort: IssueSortOptions.FREQ,\n    },\n  };\n};\n\nexport const getReleaseUnhandledIssuesUrl = (\n  orgSlug: string,\n  projectId: string | number | null,\n  version: string,\n  dateTime: DateTimeObject = {}\n) => {\n  return {\n    pathname: `/organizations/${orgSlug}/issues/`,\n    query: {\n      ...dateTime,\n      project: projectId,\n      query: new QueryResults([\n        `release:${version}`,\n        'error.unhandled:true',\n      ]).formatString(),\n      sort: IssueSortOptions.FREQ,\n    },\n  };\n};\n\nexport const getReleaseHandledIssuesUrl = (\n  orgSlug: string,\n  projectId: string | number | null,\n  version: string,\n  dateTime: DateTimeObject = {}\n) => {\n  return {\n    pathname: `/organizations/${orgSlug}/issues/`,\n    query: {\n      ...dateTime,\n      project: projectId,\n      query: new QueryResults([\n        `release:${version}`,\n        'error.handled:true',\n      ]).formatString(),\n      sort: IssueSortOptions.FREQ,\n    },\n  };\n};\n\nexport const isReleaseArchived = (release: Release) =>\n  release.status === ReleaseStatus.Archived;\n\nexport function releaseDisplayLabel(displayOption: DisplayOption, count?: number | null) {\n  if (displayOption === DisplayOption.USERS) {\n    return tn('user', 'users', count);\n  }\n\n  return tn('session', 'sessions', count);\n}\n\nexport type ReleaseBounds = {releaseStart?: string | null; releaseEnd?: string | null};\n\nexport function getReleaseBounds(release?: Release): ReleaseBounds {\n  const {lastEvent, currentProjectMeta, dateCreated} = release || {};\n  const {sessionsUpperBound} = currentProjectMeta || {};\n\n  const releaseStart = moment(dateCreated).startOf('minute').utc().format();\n  const releaseEnd = moment(\n    (moment(sessionsUpperBound).isAfter(lastEvent) ? sessionsUpperBound : lastEvent) ??\n      undefined\n  )\n    .startOf('minute')\n    .utc()\n    .format();\n\n  if (moment(releaseStart).isSame(releaseEnd, 'minute')) {\n    return {\n      releaseStart,\n      releaseEnd: moment(releaseEnd).add(1, 'minutes').utc().format(),\n    };\n  }\n\n  return {\n    releaseStart,\n    releaseEnd,\n  };\n}\n\ntype GetReleaseParams = {\n  location: Location;\n  releaseBounds: ReleaseBounds;\n  defaultStatsPeriod: string;\n  allowEmptyPeriod: boolean;\n};\n\n// these options are here only temporarily while we still support older and newer release details page\nexport function getReleaseParams({\n  location,\n  releaseBounds,\n  defaultStatsPeriod,\n  allowEmptyPeriod,\n}: GetReleaseParams) {\n  const params = getParams(\n    pick(location.query, [\n      ...Object.values(URL_PARAM),\n      ...Object.values(PAGE_URL_PARAM),\n      'cursor',\n    ]),\n    {\n      allowAbsolutePageDatetime: true,\n      defaultStatsPeriod,\n      allowEmptyPeriod,\n    }\n  );\n  if (\n    !Object.keys(params).some(param =>\n      [URL_PARAM.START, URL_PARAM.END, URL_PARAM.UTC, URL_PARAM.PERIOD].includes(param)\n    )\n  ) {\n    params[URL_PARAM.START] = releaseBounds.releaseStart;\n    params[URL_PARAM.END] = releaseBounds.releaseEnd;\n  }\n\n  return params;\n}\n"],"names":["OnboardingPanel","className","image","children","Container","IlloBox","StyledBox","space","p","theme","breakpoints","releasesSetupUrl","docsLink","external","href","t","RELEASES_TOUR_STEPS","title","src","commitImage","body","actions","statsImage","resolutionImage","emailImage","ReleasePromo","Component","step","duration","organization","projectId","this","props","trackAnalyticsEvent","eventKey","eventName","organization_id","parseInt","id","project_id","componentDidMount","render","emptyStateImg","ButtonList","gap","priority","steps","onAdvance","handleTourAdvance","onCloseModal","handleClose","doneText","doneUrl","showModal","onClick","ButtonBar","SortOption","DisplayOption","StatusOption","CRASH_FREE_DECIMAL_THRESHOLD","roundDuration","seconds","round","getCrashFreePercent","percent","decimalThreshold","decimalPlaces","displayCrashFreePercent","isNaN","rounded","toLocaleString","getSessionStatusPercent","absolute","Math","abs","displaySessionStatusPercent","getReleaseNewIssuesUrl","orgSlug","version","pathname","query","project","statsPeriod","undefined","start","end","QueryResults","formatString","sort","IssueSortOptions","getReleaseUnhandledIssuesUrl","dateTime","getReleaseHandledIssuesUrl","isReleaseArchived","release","status","ReleaseStatus","releaseDisplayLabel","displayOption","count","tn","getReleaseBounds","lastEvent","currentProjectMeta","dateCreated","sessionsUpperBound","releaseStart","moment","startOf","utc","format","releaseEnd","isAfter","isSame","add","getReleaseParams","location","releaseBounds","defaultStatsPeriod","allowEmptyPeriod","params","getParams","pick","Object","values","URL_PARAM","PAGE_URL_PARAM","allowAbsolutePageDatetime","keys","some","param","includes"],"sourceRoot":""}