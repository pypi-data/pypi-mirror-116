{"version":3,"file":"chunks/app_views_eventsV2_eventDetails_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/eventsV2/breadcrumb.tsx","webpack:///./app/components/group/times.tsx","webpack:///./app/views/eventsV2/eventDetails/linkedIssue.tsx","webpack:///./app/views/eventsV2/eventDetails/content.tsx","webpack:///./app/views/eventsV2/eventDetails/index.tsx"],"sourcesContent":["import {Component} from 'react';\nimport {Location} from 'history';\n\nimport Breadcrumbs, {Crumb} from 'app/components/breadcrumbs';\nimport {t} from 'app/locale';\nimport {Organization} from 'app/types';\nimport {Event} from 'app/types/event';\nimport EventView from 'app/utils/discover/eventView';\nimport {getDiscoverLandingUrl} from 'app/utils/discover/urls';\n\ntype DefaultProps = {\n  event: Event | undefined;\n};\n\ntype Props = DefaultProps & {\n  eventView: EventView;\n  organization: Organization;\n  location: Location;\n};\n\nclass DiscoverBreadcrumb extends Component<Props> {\n  static defaultProps: DefaultProps = {\n    event: undefined,\n  };\n\n  getCrumbs() {\n    const crumbs: Crumb[] = [];\n    const {eventView, event, organization, location} = this.props;\n    const discoverTarget = organization.features.includes('discover-query')\n      ? {\n          pathname: getDiscoverLandingUrl(organization),\n          query: {\n            ...location.query,\n            ...eventView.generateBlankQueryStringObject(),\n            ...eventView.getGlobalSelectionQuery(),\n          },\n        }\n      : null;\n\n    crumbs.push({\n      to: discoverTarget,\n      label: t('Discover'),\n    });\n\n    if (eventView && eventView.isValid()) {\n      crumbs.push({\n        to: eventView.getResultsViewUrlTarget(organization.slug),\n        label: eventView.name || '',\n      });\n    }\n\n    if (event) {\n      crumbs.push({\n        label: t('Event Detail'),\n      });\n    }\n\n    return crumbs;\n  }\n\n  render() {\n    return <Breadcrumbs crumbs={this.getCrumbs()} />;\n  }\n}\n\nexport default DiscoverBreadcrumb;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport TimeSince from 'app/components/timeSince';\nimport {IconClock} from 'app/icons';\nimport {t} from 'app/locale';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport space from 'app/styles/space';\n\n/**\n * Renders the first & last seen times for a group or event with\n * a clock icon.\n */\n\ntype Props = {\n  lastSeen: string;\n  firstSeen: string;\n};\n\nconst Times = ({lastSeen, firstSeen}: Props) => (\n  <Container>\n    <FlexWrapper>\n      {lastSeen && (\n        <Fragment>\n          <StyledIconClock size=\"11px\" />\n          <TimeSince date={lastSeen} suffix={t('ago')} />\n        </Fragment>\n      )}\n      {firstSeen && lastSeen && (\n        <span className=\"hidden-xs hidden-sm\">&nbsp;—&nbsp;</span>\n      )}\n      {firstSeen && (\n        <TimeSince date={firstSeen} suffix={t('old')} className=\"hidden-xs hidden-sm\" />\n      )}\n    </FlexWrapper>\n  </Container>\n);\n\nconst Container = styled('div')`\n  flex-shrink: 1;\n  min-width: 0; /* flex-hack for overflow-ellipsised children */\n`;\n\nconst FlexWrapper = styled('div')`\n  ${overflowEllipsis}\n\n  /* The following aligns the icon with the text, fixes bug in Firefox */\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledIconClock = styled(IconClock)`\n  /* this is solely for optics, since TimeSince always begins\n  with a number, and numbers do not have descenders */\n  margin-right: ${space(0.5)};\n`;\n\nexport default Times;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport Alert from 'app/components/alert';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport {SectionHeading} from 'app/components/charts/styles';\nimport Times from 'app/components/group/times';\nimport ProjectBadge from 'app/components/idBadge/projectBadge';\nimport Link from 'app/components/links/link';\nimport Placeholder from 'app/components/placeholder';\nimport SeenByList from 'app/components/seenByList';\nimport ShortId from 'app/components/shortId';\nimport GroupChart from 'app/components/stream/groupChart';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Group} from 'app/types';\n\ntype Props = {\n  groupId: string;\n  eventId: string;\n};\n\ntype State = {\n  group: Group;\n};\n\nclass LinkedIssue extends AsyncComponent<\n  Props & AsyncComponent['props'],\n  State & AsyncComponent['state']\n> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {groupId} = this.props;\n    const groupUrl = `/issues/${groupId}/`;\n\n    return [['group', groupUrl]];\n  }\n\n  renderLoading() {\n    return <Placeholder height=\"120px\" bottomGutter={2} />;\n  }\n\n  renderError(error?: Error, disableLog = false, disableReport = false): React.ReactNode {\n    const {errors} = this.state;\n    const hasNotFound = Object.values(errors).find(resp => resp && resp.status === 404);\n    if (hasNotFound) {\n      return (\n        <Alert type=\"warning\" icon={<IconWarning size=\"md\" />}>\n          {t('The linked issue cannot be found. It may have been deleted, or merged.')}\n        </Alert>\n      );\n    }\n\n    return super.renderError(error, disableLog, disableReport);\n  }\n\n  renderBody() {\n    const {eventId} = this.props;\n    const {group} = this.state;\n    const issueUrl = `${group.permalink}events/${eventId}/`;\n\n    return (\n      <Section>\n        <SectionHeading>{t('Event Issue')}</SectionHeading>\n        <StyledIssueCard>\n          <IssueCardHeader>\n            <StyledLink to={issueUrl} data-test-id=\"linked-issue\">\n              <StyledShortId\n                shortId={group.shortId}\n                avatar={\n                  <ProjectBadge\n                    project={group.project}\n                    avatarSize={16}\n                    hideName\n                    disableLink\n                  />\n                }\n              />\n            </StyledLink>\n            <StyledSeenByList seenBy={group.seenBy} maxVisibleAvatars={5} />\n          </IssueCardHeader>\n          <IssueCardBody>\n            <GroupChart statsPeriod=\"30d\" data={group} height={56} />\n          </IssueCardBody>\n          <IssueCardFooter>\n            <Times lastSeen={group.lastSeen} firstSeen={group.firstSeen} />\n          </IssueCardFooter>\n        </StyledIssueCard>\n      </Section>\n    );\n  }\n}\n\nconst Section = styled('div')`\n  margin-bottom: ${space(4)};\n`;\n\nconst StyledIssueCard = styled('div')`\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n`;\n\nconst IssueCardHeader = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${space(1)};\n`;\n\nconst StyledLink = styled(Link)`\n  justify-content: flex-start;\n`;\n\nconst IssueCardBody = styled('div')`\n  background: ${p => p.theme.backgroundSecondary};\n  padding-top: ${space(1)};\n`;\n\nconst StyledSeenByList = styled(SeenByList)`\n  margin: 0;\n`;\n\nconst StyledShortId = styled(ShortId)`\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.textColor};\n`;\n\nconst IssueCardFooter = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeSmall};\n  padding: ${space(0.5)} ${space(1)};\n`;\n\nexport default LinkedIssue;\n","import {Fragment} from 'react';\nimport {Params} from 'react-router/lib/Router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Feature from 'app/components/acl/feature';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport NotFound from 'app/components/errors/notFound';\nimport EventOrGroupTitle from 'app/components/eventOrGroupTitle';\nimport {BorderlessEventEntries} from 'app/components/events/eventEntries';\nimport EventMessage from 'app/components/events/eventMessage';\nimport EventVitals from 'app/components/events/eventVitals';\nimport * as SpanEntryContext from 'app/components/events/interfaces/spans/context';\nimport FileSize from 'app/components/fileSize';\nimport * as Layout from 'app/components/layouts/thirds';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport TagsTable from 'app/components/tagsTable';\nimport {IconOpen} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization, Project} from 'app/types';\nimport {Event, EventTag} from 'app/types/event';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport EventView from 'app/utils/discover/eventView';\nimport {FIELD_TAGS} from 'app/utils/discover/fields';\nimport {eventDetailsRoute} from 'app/utils/discover/urls';\nimport {getMessage} from 'app/utils/events';\nimport * as QuickTraceContext from 'app/utils/performance/quickTrace/quickTraceContext';\nimport QuickTraceQuery from 'app/utils/performance/quickTrace/quickTraceQuery';\nimport TraceMetaQuery, {\n  TraceMetaQueryChildrenProps,\n} from 'app/utils/performance/quickTrace/traceMetaQuery';\nimport {QuickTraceQueryChildrenProps} from 'app/utils/performance/quickTrace/types';\nimport {getTraceTimeRangeFromEvent} from 'app/utils/performance/quickTrace/utils';\nimport Projects from 'app/utils/projects';\nimport EventMetas from 'app/views/performance/transactionDetails/eventMetas';\nimport {transactionSummaryRouteWithQuery} from 'app/views/performance/transactionSummary/utils';\n\nimport DiscoverBreadcrumb from '../breadcrumb';\nimport {generateTitle, getExpandedResults} from '../utils';\n\nimport LinkedIssue from './linkedIssue';\n\n/**\n * Some tag keys should never be formatted as `tag[...]`\n * when used as a filter because they are predefined.\n */\nconst EXCLUDED_TAG_KEYS = new Set(['release']);\n\ntype Props = {\n  organization: Organization;\n  location: Location;\n  params: Params;\n  eventSlug: string;\n  eventView: EventView;\n};\n\ntype State = {\n  event: Event | undefined;\n  isSidebarVisible: boolean;\n} & AsyncComponent['state'];\n\nclass EventDetailsContent extends AsyncComponent<Props, State> {\n  state: State = {\n    // AsyncComponent state\n    loading: true,\n    reloading: false,\n    error: false,\n    errors: {},\n    event: undefined,\n\n    // local state\n    isSidebarVisible: true,\n  };\n\n  toggleSidebar = () => {\n    this.setState({isSidebarVisible: !this.state.isSidebarVisible});\n  };\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, params, location, eventView} = this.props;\n    const {eventSlug} = params;\n\n    const query = eventView.getEventsAPIPayload(location);\n\n    // Fields aren't used, reduce complexity by omitting from query entirely\n    query.field = [];\n\n    const url = `/organizations/${organization.slug}/events/${eventSlug}/`;\n\n    // Get a specific event. This could be coming from\n    // a paginated group or standalone event.\n    return [['event', url, {query}]];\n  }\n\n  get projectId() {\n    return this.props.eventSlug.split(':')[0];\n  }\n\n  generateTagKey = (tag: EventTag) => {\n    // Some tags may be normalized from context, but not all of them are.\n    // This supports a user making a custom tag with the same name as one\n    // that comes from context as all of these are also tags.\n    if (tag.key in FIELD_TAGS && !EXCLUDED_TAG_KEYS.has(tag.key)) {\n      return `tags[${tag.key}]`;\n    }\n    return tag.key;\n  };\n\n  generateTagUrl = (tag: EventTag) => {\n    const {eventView, organization} = this.props;\n    const {event} = this.state;\n    if (!event) {\n      return '';\n    }\n    const eventReference = {...event};\n    if (eventReference.id) {\n      delete (eventReference as any).id;\n    }\n    const tagKey = this.generateTagKey(tag);\n    const nextView = getExpandedResults(eventView, {[tagKey]: tag.value}, eventReference);\n    return nextView.getResultsViewUrlTarget(organization.slug);\n  };\n\n  renderBody() {\n    const {event} = this.state;\n\n    if (!event) {\n      return <NotFound />;\n    }\n\n    return this.renderContent(event);\n  }\n\n  renderContent(event: Event) {\n    const {organization, location, eventView} = this.props;\n    const {isSidebarVisible} = this.state;\n\n    // metrics\n    trackAnalyticsEvent({\n      eventKey: 'discover_v2.event_details',\n      eventName: 'Discoverv2: Opened Event Details',\n      event_type: event.type,\n      organization_id: parseInt(organization.id, 10),\n    });\n\n    const transactionName = event.tags.find(tag => tag.key === 'transaction')?.value;\n    const transactionSummaryTarget =\n      event.type === 'transaction' && transactionName\n        ? transactionSummaryRouteWithQuery({\n            orgSlug: organization.slug,\n            transaction: transactionName,\n            projectID: event.projectID,\n            query: location.query,\n          })\n        : null;\n\n    const eventJsonUrl = `/api/0/projects/${organization.slug}/${this.projectId}/events/${event.eventID}/json/`;\n\n    const renderContent = (\n      results?: QuickTraceQueryChildrenProps,\n      metaResults?: TraceMetaQueryChildrenProps\n    ) => (\n      <Fragment>\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <DiscoverBreadcrumb\n              eventView={eventView}\n              event={event}\n              organization={organization}\n              location={location}\n            />\n            <EventHeader event={event} />\n          </Layout.HeaderContent>\n          <Layout.HeaderActions>\n            <ButtonBar gap={1}>\n              <Button onClick={this.toggleSidebar}>\n                {isSidebarVisible ? 'Hide Details' : 'Show Details'}\n              </Button>\n              <Button icon={<IconOpen />} href={eventJsonUrl} external>\n                {t('JSON')} (<FileSize bytes={event.size} />)\n              </Button>\n              {transactionSummaryTarget && (\n                <Feature organization={organization} features={['performance-view']}>\n                  {({hasFeature}) => (\n                    <Button\n                      disabled={!hasFeature}\n                      priority=\"primary\"\n                      to={transactionSummaryTarget}\n                    >\n                      {t('Go to Summary')}\n                    </Button>\n                  )}\n                </Feature>\n              )}\n            </ButtonBar>\n          </Layout.HeaderActions>\n        </Layout.Header>\n        <Layout.Body>\n          <Layout.Main fullWidth>\n            <EventMetas\n              quickTrace={results ?? null}\n              meta={metaResults?.meta ?? null}\n              event={event}\n              organization={organization}\n              projectId={this.projectId}\n              location={location}\n              errorDest=\"discover\"\n              transactionDest=\"discover\"\n            />\n          </Layout.Main>\n          <Layout.Main fullWidth={!isSidebarVisible}>\n            <Projects orgId={organization.slug} slugs={[this.projectId]}>\n              {({projects, initiallyLoaded}) =>\n                initiallyLoaded ? (\n                  <SpanEntryContext.Provider\n                    value={{\n                      getViewChildTransactionTarget: childTransactionProps => {\n                        const childTransactionLink = eventDetailsRoute({\n                          eventSlug: childTransactionProps.eventSlug,\n                          orgSlug: organization.slug,\n                        });\n\n                        return {\n                          pathname: childTransactionLink,\n                          query: eventView.generateQueryStringObject(),\n                        };\n                      },\n                    }}\n                  >\n                    <QuickTraceContext.Provider value={results}>\n                      <BorderlessEventEntries\n                        organization={organization}\n                        event={event}\n                        project={projects[0] as Project}\n                        location={location}\n                        showExampleCommit={false}\n                        showTagSummary={false}\n                        api={this.api}\n                        isBorderless\n                      />\n                    </QuickTraceContext.Provider>\n                  </SpanEntryContext.Provider>\n                ) : (\n                  <LoadingIndicator />\n                )\n              }\n            </Projects>\n          </Layout.Main>\n          {isSidebarVisible && (\n            <Layout.Side>\n              <EventVitals event={event} />\n              {event.groupID && (\n                <LinkedIssue groupId={event.groupID} eventId={event.eventID} />\n              )}\n              <TagsTable\n                generateUrl={this.generateTagUrl}\n                event={event}\n                query={eventView.query}\n              />\n            </Layout.Side>\n          )}\n        </Layout.Body>\n      </Fragment>\n    );\n\n    const hasQuickTraceView = organization.features.includes('performance-view');\n\n    if (hasQuickTraceView) {\n      const traceId = event.contexts?.trace?.trace_id ?? '';\n      const {start, end} = getTraceTimeRangeFromEvent(event);\n\n      return (\n        <TraceMetaQuery\n          location={location}\n          orgSlug={organization.slug}\n          traceId={traceId}\n          start={start}\n          end={end}\n        >\n          {metaResults => (\n            <QuickTraceQuery\n              event={event}\n              location={location}\n              orgSlug={organization.slug}\n            >\n              {results => renderContent(results, metaResults)}\n            </QuickTraceQuery>\n          )}\n        </TraceMetaQuery>\n      );\n    }\n\n    return renderContent();\n  }\n\n  renderError(error: Error) {\n    const notFound = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 404\n    );\n    const permissionDenied = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 403\n    );\n\n    if (notFound) {\n      return <NotFound />;\n    }\n    if (permissionDenied) {\n      return (\n        <LoadingError message={t('You do not have permission to view that event.')} />\n      );\n    }\n\n    return super.renderError(error, true, true);\n  }\n\n  getEventSlug = (): string => {\n    const {eventSlug} = this.props.params;\n\n    if (typeof eventSlug === 'string') {\n      return eventSlug.trim();\n    }\n\n    return '';\n  };\n\n  renderComponent() {\n    const {eventView, organization} = this.props;\n    const {event} = this.state;\n    const eventSlug = this.getEventSlug();\n    const projectSlug = eventSlug.split(':')[0];\n\n    const title = generateTitle({eventView, event, organization});\n\n    return (\n      <SentryDocumentTitle\n        title={title}\n        orgSlug={organization.slug}\n        projectSlug={projectSlug}\n      >\n        {super.renderComponent()}\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nconst EventHeader = ({event}: {event: Event}) => {\n  const message = getMessage(event);\n  return (\n    <EventHeaderContainer data-test-id=\"event-header\">\n      <TitleWrapper>\n        <EventOrGroupTitle data={event} />\n      </TitleWrapper>\n      {message && (\n        <MessageWrapper>\n          <EventMessage message={message} />\n        </MessageWrapper>\n      )}\n    </EventHeaderContainer>\n  );\n};\n\nconst EventHeaderContainer = styled('div')`\n  max-width: ${p => p.theme.breakpoints[0]};\n`;\n\nconst TitleWrapper = styled('div')`\n  font-size: ${p => p.theme.headerFontSize};\n  margin-top: 20px;\n`;\n\nconst MessageWrapper = styled('div')`\n  margin-top: ${space(1)};\n`;\n\nexport default EventDetailsContent;\n","import {Component} from 'react';\nimport {Params} from 'react-router/lib/Router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport LightWeightNoProjectMessage from 'app/components/lightWeightNoProjectMessage';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {t} from 'app/locale';\nimport {PageContent} from 'app/styles/organization';\nimport {Organization} from 'app/types';\nimport EventView from 'app/utils/discover/eventView';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport EventDetailsContent from './content';\n\ntype Props = {\n  organization: Organization;\n  location: Location;\n  params: Params;\n};\n\nclass EventDetails extends Component<Props> {\n  getEventSlug = (): string => {\n    const {eventSlug} = this.props.params;\n\n    if (typeof eventSlug === 'string') {\n      return eventSlug.trim();\n    }\n\n    return '';\n  };\n\n  getEventView = (): EventView => {\n    const {location} = this.props;\n\n    return EventView.fromLocation(location);\n  };\n\n  getDocumentTitle = (name: string | undefined): Array<string> =>\n    typeof name === 'string' && String(name).trim().length > 0\n      ? [String(name).trim(), t('Discover')]\n      : [t('Discover')];\n\n  render() {\n    const {organization, location, params} = this.props;\n    const eventView = this.getEventView();\n    const eventSlug = this.getEventSlug();\n\n    const documentTitle = this.getDocumentTitle(eventView.name).join(' - ');\n    const projectSlug = eventSlug.split(':')[0];\n\n    return (\n      <SentryDocumentTitle\n        title={documentTitle}\n        orgSlug={organization.slug}\n        projectSlug={projectSlug}\n      >\n        <StyledPageContent>\n          <LightWeightNoProjectMessage organization={organization}>\n            <EventDetailsContent\n              organization={organization}\n              location={location}\n              params={params}\n              eventView={eventView}\n              eventSlug={eventSlug}\n            />\n          </LightWeightNoProjectMessage>\n        </StyledPageContent>\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nexport default withOrganization(EventDetails);\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n"],"names":["DiscoverBreadcrumb","Component","getCrumbs","crumbs","eventView","event","organization","location","this","props","discoverTarget","features","includes","pathname","getDiscoverLandingUrl","query","generateBlankQueryStringObject","getGlobalSelectionQuery","push","to","label","t","isValid","getResultsViewUrlTarget","slug","name","render","undefined","Times","lastSeen","firstSeen","Container","FlexWrapper","Fragment","StyledIconClock","size","date","suffix","className","overflowEllipsis","IconClock","space","LinkedIssue","AsyncComponent","getEndpoints","groupId","renderLoading","height","bottomGutter","renderError","error","disableLog","disableReport","errors","state","Object","values","find","resp","status","type","icon","super","renderBody","eventId","group","issueUrl","permalink","Section","StyledIssueCard","IssueCardHeader","StyledLink","StyledShortId","shortId","avatar","project","avatarSize","hideName","disableLink","StyledSeenByList","seenBy","maxVisibleAvatars","IssueCardBody","statsPeriod","data","IssueCardFooter","p","theme","border","borderRadius","Link","backgroundSecondary","SeenByList","ShortId","fontSizeMedium","textColor","gray300","fontSizeSmall","EXCLUDED_TAG_KEYS","Set","EventDetailsContent","loading","reloading","isSidebarVisible","setState","tag","key","FIELD_TAGS","has","eventReference","id","tagKey","generateTagKey","getExpandedResults","value","eventSlug","params","trim","getEventsAPIPayload","field","split","renderContent","trackAnalyticsEvent","eventKey","eventName","event_type","organization_id","parseInt","transactionName","tags","transactionSummaryTarget","transactionSummaryRouteWithQuery","orgSlug","transaction","projectID","eventJsonUrl","projectId","eventID","results","metaResults","EventHeader","gap","onClick","toggleSidebar","href","external","bytes","hasFeature","disabled","priority","fullWidth","quickTrace","meta","errorDest","transactionDest","orgId","slugs","projects","initiallyLoaded","getViewChildTransactionTarget","childTransactionProps","eventDetailsRoute","generateQueryStringObject","showExampleCommit","showTagSummary","api","isBorderless","groupID","generateUrl","generateTagUrl","traceId","contexts","trace","trace_id","start","end","getTraceTimeRangeFromEvent","notFound","permissionDenied","message","renderComponent","projectSlug","getEventSlug","title","generateTitle","getMessage","EventHeaderContainer","TitleWrapper","MessageWrapper","breakpoints","headerFontSize","EventDetails","EventView","String","length","getEventView","documentTitle","getDocumentTitle","join","StyledPageContent","withOrganization","PageContent"],"sourceRoot":""}