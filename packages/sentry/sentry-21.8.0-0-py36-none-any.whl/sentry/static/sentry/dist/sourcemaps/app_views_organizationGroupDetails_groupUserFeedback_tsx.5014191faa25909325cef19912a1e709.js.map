{"version":3,"file":"chunks/app_views_organizationGroupDetails_groupUserFeedback_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"82BAiCA,MAAMA,UAA0BC,EAAAA,UAAwB,mDACvC,CACbC,SAAS,EACTC,OAAO,EACPC,WAAY,GACZC,UAAW,MALyC,yBAsB1C,KACVC,KAAKC,SAAS,CACZL,SAAS,EACTC,OAAO,KAGTK,EAAAA,EAAAA,IAAsBF,KAAKG,MAAMC,MAAMC,GAAI,IACtCL,KAAKG,MAAMG,OACdC,OAAQP,KAAKG,MAAMK,SAASC,MAAMF,QAAU,KAE3CG,MAAK,EAAEC,EAAMC,EAAGC,MACfb,KAAKC,SAAS,CACZJ,OAAO,EACPD,SAAS,EACTE,WAAYa,EACZZ,UAAWc,MAAAA,OAAF,EAAEA,EAAMC,kBAAkB,aAGtCC,OAAM,KACLf,KAAKC,SAAS,CACZJ,OAAO,EACPD,SAAS,UAnCjBoB,oBACEhB,KAAKiB,YAGPC,mBAAmBC,GAEdC,GAAAA,CAAQD,EAAUb,OAAQN,KAAKG,MAAMG,SACtCa,EAAUX,SAASa,WAAarB,KAAKG,MAAMK,SAASa,UACpDF,EAAUX,SAASc,SAAWtB,KAAKG,MAAMK,SAASc,QAElDtB,KAAKiB,YA8BTM,SACE,MAAM,WAACzB,EAAD,QAAaF,EAAb,MAAsBC,GAASG,KAAKwB,OACpC,aAACC,EAAD,MAAerB,GAASJ,KAAKG,MAEnC,OAAIP,GACK,QAAC,IAAD,IAGLC,GACK,QAAC,IAAD,CAAc6B,QAAS1B,KAAKiB,YAGjCnB,EAAW6B,QAEX,eAAKC,UAAU,MAAf,UACE,eAAKA,UAAU,WAAf,UACG9B,EAAW+B,KAAI,CAACC,EAAMC,KACrB,QAAC,IAAD,CAEEC,OAAQF,EACRG,MAAOR,EAAaS,KACpBC,QAAS/B,EAAMC,IAHV0B,MAMT,QAAC,IAAD,CAAYhC,UAAWC,KAAKwB,MAAMzB,aAAeC,KAAKG,cAMvD,QAAC,IAAD,CAAmBiC,WAAY,CAAChC,EAAMiC,QAAQhC,OA9EnDX,EAAAA,YAAAA,oBAkFN,SAAe4C,EAAAA,EAAAA,GAAiB5C","sources":["webpack:///./app/views/organizationGroupDetails/groupUserFeedback.tsx"],"sourcesContent":["import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport isEqual from 'lodash/isEqual';\n\nimport EventUserFeedback from 'app/components/events/userFeedback';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport Pagination from 'app/components/pagination';\nimport {Group, Organization, Project, UserReport} from 'app/types';\nimport withOrganization from 'app/utils/withOrganization';\nimport UserFeedbackEmpty from 'app/views/userFeedback/userFeedbackEmpty';\n\nimport {fetchGroupUserReports} from './utils';\n\ntype RouteParams = {\n  orgId: string;\n  groupId: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  group: Group;\n  organization: Organization;\n  project: Project;\n  environments: string[];\n};\n\ntype State = {\n  loading: boolean;\n  error: boolean;\n  reportList: UserReport[];\n  pageLinks?: string | null;\n};\n\nclass GroupUserFeedback extends Component<Props, State> {\n  state: State = {\n    loading: true,\n    error: false,\n    reportList: [],\n    pageLinks: '',\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      !isEqual(prevProps.params, this.props.params) ||\n      prevProps.location.pathname !== this.props.location.pathname ||\n      prevProps.location.search !== this.props.location.search\n    ) {\n      this.fetchData();\n    }\n  }\n\n  fetchData = () => {\n    this.setState({\n      loading: true,\n      error: false,\n    });\n\n    fetchGroupUserReports(this.props.group.id, {\n      ...this.props.params,\n      cursor: this.props.location.query.cursor || '',\n    })\n      .then(([data, _, resp]) => {\n        this.setState({\n          error: false,\n          loading: false,\n          reportList: data,\n          pageLinks: resp?.getResponseHeader('Link'),\n        });\n      })\n      .catch(() => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n      });\n  };\n\n  render() {\n    const {reportList, loading, error} = this.state;\n    const {organization, group} = this.props;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    if (reportList.length) {\n      return (\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            {reportList.map((item, idx) => (\n              <EventUserFeedback\n                key={idx}\n                report={item}\n                orgId={organization.slug}\n                issueId={group.id}\n              />\n            ))}\n            <Pagination pageLinks={this.state.pageLinks} {...this.props} />\n          </div>\n        </div>\n      );\n    }\n\n    return <UserFeedbackEmpty projectIds={[group.project.id]} />;\n  }\n}\n\nexport default withOrganization(GroupUserFeedback);\n"],"names":["GroupUserFeedback","Component","loading","error","reportList","pageLinks","this","setState","fetchGroupUserReports","props","group","id","params","cursor","location","query","then","data","_","resp","getResponseHeader","catch","componentDidMount","fetchData","componentDidUpdate","prevProps","isEqual","pathname","search","render","state","organization","onRetry","length","className","map","item","idx","report","orgId","slug","issueId","projectIds","project","withOrganization"],"sourceRoot":""}