#!/usr/bin/env python3
# This file is placed in the Public Domain.

__version__ = 125

import os, sys ; sys.path.insert(0, os.getcwd())

import atexit
import os
import readline
import sys
import termios
import ob.spc
import bot.all
import mod.all

ob.spc.wd = os.path.expanduser("~/.bot")

from ob.krn import Kernel, Client, kernel

resume = {}


class Runtime(Kernel):

    def error(self, txt):
        cprint(txt)


class CLI(Client):

    def raw(self, txt):
        cprint(txt)


class Console(CLI):
    def handle(self, e):
        k.put(e)
        e.wait()

    def poll(self):
        return input("> ")


k = Runtime()


def cprint(txt):
    print(txt)
    sys.stdout.flush()

    
def daemon():
    pid = os.fork()
    if pid != 0:
        termreset()
        os._exit(0)
    os.setsid()
    os.umask(0)
    si = open("/dev/null", "r")
    so = open("/dev/null", "a+")
    se = open("/dev/null", "a+")
    os.dup2(si.fileno(), sys.stdin.fileno())
    os.dup2(so.fileno(), sys.stdout.fileno())
    os.dup2(se.fileno(), sys.stderr.fileno())


def termsetup(fd):
    return termios.tcgetattr(fd)


def termreset():
    if "old" in resume:
        try:
            termios.tcsetattr(resume["fd"], termios.TCSADRAIN, resume["old"])
        except termios.error:
            pass


def termsave():
    try:
        resume["fd"] = sys.stdin.fileno()
        resume["old"] = termsetup(sys.stdin.fileno())
        atexit.register(termreset)
    except termios.error:
        pass

def wrap(func):
    termsave()
    try:
        func()
    except KeyboardInterrupt:
        pass
    finally:
        termreset()


def ver(event):
    event.reply("BOTLIB %s" % __version__)


def main():
    k.boot()
    k.add(ver)
    k.scan("bot")
    k.scan("mod")
    if k.cfg.txt:
        c = CLI()
        return c.cmd(k.cfg.otxt)
    if k.opts("d"):
        daemon()
        k.privileges()
    k.start()
    if k.cfg.m or k.opts("c"):
        csl = Console()
        csl.start()
        k.init(k.cfg.m)
    if k.opts("cd") or k.cfg.m:
        k.wait()


wrap(main)
