{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Thermal Treatment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import PFAS_SAT_ProcessModels as pspd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from IPython.display import Image\n",
    "import pandas as pd\n",
    "pd.set_option('display.max_colwidth', 0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Model document\n",
    "\n",
    "Combustion systems include mass burn incinerators for MSW, hazardous solid waste, and medical waste, as well as cement kilns. The combustion process model in the SAT framework was designed so that by changing default parameters, a variety of conventional and emerging thermal treatment processes can be represented. In addition to MSW incinerators, other potential thermal processes include gasification/pyrolysis systems, and thermomechanochemical systems, which may include mechanical and chemical processing prior to combustion. \n",
    "To begin, the incoming materials are partially or fully combusted. During combustion, a fraction of the PFAS may be volatilized and/or destroyed, but data on destruction and release of volatilized PFAS and/or products of incomplete combustion are limited. The volatilized compounds may be transformed into chlorofluorocarbons, which deplete stratospheric ozone and are potent greenhouse gases. The incineration process produces combustion residuals that may include bottom ash, fly ash, and air pollution control (APC) residues. The mass of PFAS flows are modeled using a destruction and removal efficiency (DRE), and fraction of the DRE that remains in the residual. Based on these inputs, the model calculates the PFAS destroyed, released to the air and remaining in the ash. The ash is then sent to landfill.\n",
    "\n",
    "<img src=\"../Images/ProcessModels/ThemalTreatment.png\" alt=\"Drawing\" style=\"width: 500px;\"/>\n",
    "\n",
    "\n",
    "### Assumptions and Limitations\n",
    "1.\tThe model assumes a single DRE and fraction remaining on the residual for each material and type of PFAS. Data is relatively limited, but this can be readily updated as more data becomes available.\n",
    "2.\tThe model assumes there is a single ash stream with a common set of parameters.\n",
    "3.\tThe model assumes a single VS destruction efficiency, but this could vary by material.\n",
    "4.\tThe model does not consider transformations of PFAS."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Input Parameters for Thermal Treatment model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Category</th>\n",
       "      <th>Parameter Name</th>\n",
       "      <th>Parameter Description</th>\n",
       "      <th>amount</th>\n",
       "      <th>unit</th>\n",
       "      <th>Reference</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFOA</td>\n",
       "      <td>DRE of PFOA</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFOS</td>\n",
       "      <td>DRE of PFOS</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFBA</td>\n",
       "      <td>DRE of PFBA</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFPeA</td>\n",
       "      <td>DRE of PFPeA</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFHxA</td>\n",
       "      <td>DRE of PFHxA</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFHpA</td>\n",
       "      <td>DRE of PFHpA</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFNA</td>\n",
       "      <td>DRE of PFNA</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFDA</td>\n",
       "      <td>DRE of PFDA</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFBS</td>\n",
       "      <td>DRE of PFBS</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFHxS</td>\n",
       "      <td>DRE of PFHxS</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFOA</td>\n",
       "      <td>Fraction of PFOA remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFOS</td>\n",
       "      <td>Fraction of PFOS remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFBA</td>\n",
       "      <td>Fraction of PFBA remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFPeA</td>\n",
       "      <td>Fraction of PFPeA remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFHxA</td>\n",
       "      <td>Fraction of PFHxA remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFHpA</td>\n",
       "      <td>Fraction of PFHpA remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFNA</td>\n",
       "      <td>Fraction of PFNA remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFDA</td>\n",
       "      <td>Fraction of PFDA remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFBS</td>\n",
       "      <td>Fraction of PFBS remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFHxS</td>\n",
       "      <td>Fraction of PFHxS remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Combustion parameters</td>\n",
       "      <td>frac_vs_to_res</td>\n",
       "      <td>Fraction of incoming Volatile Solids to Combustion Residuals</td>\n",
       "      <td>0.05</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Combustion parameters</td>\n",
       "      <td>res_ts_cont</td>\n",
       "      <td>Solids content of residuals</td>\n",
       "      <td>0.85</td>\n",
       "      <td>fraction</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                           Category  \\\n",
       "0   Total destruction and removal efficiency                          \n",
       "1   Total destruction and removal efficiency                          \n",
       "2   Total destruction and removal efficiency                          \n",
       "3   Total destruction and removal efficiency                          \n",
       "4   Total destruction and removal efficiency                          \n",
       "5   Total destruction and removal efficiency                          \n",
       "6   Total destruction and removal efficiency                          \n",
       "7   Total destruction and removal efficiency                          \n",
       "8   Total destruction and removal efficiency                          \n",
       "9   Total destruction and removal efficiency                          \n",
       "10  Fraction of not destroyed and removed that remains in residuals   \n",
       "11  Fraction of not destroyed and removed that remains in residuals   \n",
       "12  Fraction of not destroyed and removed that remains in residuals   \n",
       "13  Fraction of not destroyed and removed that remains in residuals   \n",
       "14  Fraction of not destroyed and removed that remains in residuals   \n",
       "15  Fraction of not destroyed and removed that remains in residuals   \n",
       "16  Fraction of not destroyed and removed that remains in residuals   \n",
       "17  Fraction of not destroyed and removed that remains in residuals   \n",
       "18  Fraction of not destroyed and removed that remains in residuals   \n",
       "19  Fraction of not destroyed and removed that remains in residuals   \n",
       "20  Combustion parameters                                             \n",
       "21  Combustion parameters                                             \n",
       "\n",
       "    Parameter Name  \\\n",
       "0   PFOA             \n",
       "1   PFOS             \n",
       "2   PFBA             \n",
       "3   PFPeA            \n",
       "4   PFHxA            \n",
       "5   PFHpA            \n",
       "6   PFNA             \n",
       "7   PFDA             \n",
       "8   PFBS             \n",
       "9   PFHxS            \n",
       "10  PFOA             \n",
       "11  PFOS             \n",
       "12  PFBA             \n",
       "13  PFPeA            \n",
       "14  PFHxA            \n",
       "15  PFHpA            \n",
       "16  PFNA             \n",
       "17  PFDA             \n",
       "18  PFBS             \n",
       "19  PFHxS            \n",
       "20  frac_vs_to_res   \n",
       "21  res_ts_cont      \n",
       "\n",
       "                                           Parameter Description  amount  \\\n",
       "0   DRE of PFOA                                                   0.97     \n",
       "1   DRE of PFOS                                                   0.97     \n",
       "2   DRE of PFBA                                                   0.97     \n",
       "3   DRE of PFPeA                                                  0.97     \n",
       "4   DRE of PFHxA                                                  0.97     \n",
       "5   DRE of PFHpA                                                  0.97     \n",
       "6   DRE of PFNA                                                   0.97     \n",
       "7   DRE of PFDA                                                   0.97     \n",
       "8   DRE of PFBS                                                   0.97     \n",
       "9   DRE of PFHxS                                                  0.97     \n",
       "10  Fraction of PFOA remained in residuals                        0.33     \n",
       "11  Fraction of PFOS remained in residuals                        0.33     \n",
       "12  Fraction of PFBA remained in residuals                        0.33     \n",
       "13  Fraction of PFPeA remained in residuals                       0.33     \n",
       "14  Fraction of PFHxA remained in residuals                       0.33     \n",
       "15  Fraction of PFHpA remained in residuals                       0.33     \n",
       "16  Fraction of PFNA remained in residuals                        0.33     \n",
       "17  Fraction of PFDA remained in residuals                        0.33     \n",
       "18  Fraction of PFBS remained in residuals                        0.33     \n",
       "19  Fraction of PFHxS remained in residuals                       0.33     \n",
       "20  Fraction of incoming Volatile Solids to Combustion Residuals  0.05     \n",
       "21  Solids content of residuals                                   0.85     \n",
       "\n",
       "        unit Reference  \n",
       "0   fraction            \n",
       "1   fraction            \n",
       "2   fraction            \n",
       "3   fraction            \n",
       "4   fraction            \n",
       "5   fraction            \n",
       "6   fraction            \n",
       "7   fraction            \n",
       "8   fraction            \n",
       "9   fraction            \n",
       "10  fraction            \n",
       "11  fraction            \n",
       "12  fraction            \n",
       "13  fraction            \n",
       "14  fraction            \n",
       "15  fraction            \n",
       "16  fraction            \n",
       "17  fraction            \n",
       "18  fraction            \n",
       "19  fraction            \n",
       "20  fraction            \n",
       "21  fraction            "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ThermalTreatment = pspd.ThermalTreatment()\n",
    "ThermalTreatment.InputData.Data[['Category','Parameter Name', 'Parameter Description', 'amount', 'unit','Reference']]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Incoming MSW to Thermal Treatment "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Parameter</th>\n",
       "      <th>Unit</th>\n",
       "      <th>Amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Mass flow</td>\n",
       "      <td>kg</td>\n",
       "      <td>1000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Solids flow</td>\n",
       "      <td>kg</td>\n",
       "      <td>254.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Moisture flow</td>\n",
       "      <td>kg</td>\n",
       "      <td>746.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>VS flow</td>\n",
       "      <td>kg</td>\n",
       "      <td>134.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Carbon flow</td>\n",
       "      <td>kg</td>\n",
       "      <td>84.074</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>PFOA</td>\n",
       "      <td>μg</td>\n",
       "      <td>1070.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>PFOS</td>\n",
       "      <td>μg</td>\n",
       "      <td>840.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>PFBA</td>\n",
       "      <td>μg</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>PFPeA</td>\n",
       "      <td>μg</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>PFHxA</td>\n",
       "      <td>μg</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>PFHpA</td>\n",
       "      <td>μg</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>PFNA</td>\n",
       "      <td>μg</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>PFDA</td>\n",
       "      <td>μg</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>PFBS</td>\n",
       "      <td>μg</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>PFHxS</td>\n",
       "      <td>μg</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Parameter Unit  Amount\n",
       "0   Mass flow      kg   1000  \n",
       "1   Solids flow    kg   254.0 \n",
       "2   Moisture flow  kg   746.0 \n",
       "3   VS flow        kg   134.62\n",
       "4   Carbon flow    kg   84.074\n",
       "5   PFOA           μg   1070.0\n",
       "6   PFOS           μg   840.0 \n",
       "7   PFBA           μg   0.0   \n",
       "8   PFPeA          μg   0.0   \n",
       "9   PFHxA          μg   0.0   \n",
       "10  PFHpA          μg   0.0   \n",
       "11  PFNA           μg   0.0   \n",
       "12  PFDA           μg   0.0   \n",
       "13  PFBS           μg   0.0   \n",
       "14  PFHxS          μg   0.0   "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "IncominWaste = pspd.IncomFlow()\n",
    "IncominWaste.set_flow('MSW', 1000)\n",
    "IncominWaste.calc()\n",
    "MSW = IncominWaste.Inc_flow\n",
    "MSW.report()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## PFAS balance in Thermal Treatment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Air Emission</th>\n",
       "      <th>Combustion Residuals</th>\n",
       "      <th>Destructed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>PFOA</th>\n",
       "      <td>2.01</td>\n",
       "      <td>0.99</td>\n",
       "      <td>97.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFOS</th>\n",
       "      <td>2.01</td>\n",
       "      <td>0.99</td>\n",
       "      <td>97.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFBA</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFPeA</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFHxA</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFHpA</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFNA</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFDA</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFBS</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFHxS</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Air Emission  Combustion Residuals  Destructed\n",
       "PFOA   2.01          0.99                  97.0      \n",
       "PFOS   2.01          0.99                  97.0      \n",
       "PFBA  NaN           NaN                   NaN        \n",
       "PFPeA NaN           NaN                   NaN        \n",
       "PFHxA NaN           NaN                   NaN        \n",
       "PFHpA NaN           NaN                   NaN        \n",
       "PFNA  NaN           NaN                   NaN        \n",
       "PFDA  NaN           NaN                   NaN        \n",
       "PFBS  NaN           NaN                   NaN        \n",
       "PFHxS NaN           NaN                   NaN        "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ThermalTreatment.calc(Inc_flow=MSW)\n",
    "ThermalTreatment.report(normalized=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ThermalTreatment.plot_sankey()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x360 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ThermalTreatment.plot_sankey_report(margin=.5, gap=.3)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
