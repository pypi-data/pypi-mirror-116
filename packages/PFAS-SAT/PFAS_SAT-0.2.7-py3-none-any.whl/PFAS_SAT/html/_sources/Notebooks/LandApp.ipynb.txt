{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Land Application"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import PFAS_SAT_ProcessModels as pspd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from IPython.display import Image\n",
    "import pandas as pd\n",
    "pd.set_option('display.max_colwidth', 0)\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Model document\n",
    "\n",
    "Finished compost and dewatered, stabilized WWT solids are both suitable for land application. Once these materials are land applied, PFAS may volatize, be released to surface or ground- water, or sorbed to the soil/waste stream mixture. The flow of PFAS from land application is modeled using a liquid-solid partition coefficient normalized to the amount of organic carbon, combined with a water balance to track the flow of PFAS from the soil. Model predictions are based on achievement of equilibrium. By default, it is assumed that no volatilization occurs, but a user can enter a fraction of PFAS that volatilizes. It is further assumed that the land applied material is well mixed with the top layer of soil (thickness is a user input). The partition coefficient is used to estimate the concentration of PFAS in the liquid and solids. The concentration in the liquid changes throughout the year as PFAS runs off or is leached to the groundwater (i.e., it is assumed that annual precipitation is uniform throughout the year and continuously removes PFAS from the mixture). The user enters a run-off coefficient based on the soil type, land use, grade, and vegetation. The run-off is assumed to be released to surface water. Another fraction of the precipitation is removed via evapotranspiration (ET) based on the local climate and vegetation. The remaining precipitation is assumed to leach into groundwater. The PFAS remaining in the soil may be taken up by and bioaccumulate in plants. While PFAS uptake by plants was not modeled in this initial version of the SAT, it may be an important PFAS fate pathway as plants may enter the food chain depending on what is grown. \n",
    "\n",
    "<img src=\"../Images/ProcessModels/Land_Application_Diagram.png\" alt=\"Drawing\" style=\"width: 400px;\"/>\n",
    "\n",
    "### Assumptions and Limitations:\n",
    "1.\tThe organic carbon-normalized partition coefficient assumes that the organic carbon in the soil has the same PFAS sorption capacity as the organic carbon in either the compost or the dewatered, stabilized WWT solids in the land applied material.\n",
    "2.\tThe water balance model is averaged over a year and ignores potential effects from intense rains that may lead to substantial additional erosion and loss of solids and associated PFAS.\n",
    "3.\tApart from precipitation, the water balance does not consider other external water inputs such as irrigation. This could be included by adjusting the precipitation input value. \n",
    "4.\tVolatilization is assumed to be zero by default due to a lack of data. However, the user may assign a fraction of the PFAS to be volatilized.\n",
    "5.\tFuture work is also required to implement a dynamic model to account for changes in the organic C content of over time as land-applied materials decompose, and to account for episodic precipitation events. \n",
    "6.\tThe loading rate for the land application of dewatered WWT solids will vary based on solids properties among other factors. The loading rate default values given here reflect a typical annual loading rate for application to agricultural land growing corn. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Input Parameters for Land Application model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Category</th>\n",
       "      <th>Dictonary_Name</th>\n",
       "      <th>Parameter Name</th>\n",
       "      <th>Parameter Description</th>\n",
       "      <th>amount</th>\n",
       "      <th>unit</th>\n",
       "      <th>minimum</th>\n",
       "      <th>maximum</th>\n",
       "      <th>Reference</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Log partition coefficient</td>\n",
       "      <td>LogPartCoef</td>\n",
       "      <td>PFOA</td>\n",
       "      <td>PFOA Log Koc (soils/sediments)</td>\n",
       "      <td>2.190</td>\n",
       "      <td>log L/kg OC</td>\n",
       "      <td>1.300</td>\n",
       "      <td>4.500</td>\n",
       "      <td>[2,3,4,5]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Log partition coefficient</td>\n",
       "      <td>LogPartCoef</td>\n",
       "      <td>PFOS</td>\n",
       "      <td>PFOS Log Koc  (soils/sediments)</td>\n",
       "      <td>3.040</td>\n",
       "      <td>log L/kg OC</td>\n",
       "      <td>2.400</td>\n",
       "      <td>4.700</td>\n",
       "      <td>[2,3,4,5]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Log partition coefficient</td>\n",
       "      <td>LogPartCoef</td>\n",
       "      <td>PFBA</td>\n",
       "      <td>PFBA Log Koc  (soils/sediments)</td>\n",
       "      <td>1.880</td>\n",
       "      <td>log L/kg OC</td>\n",
       "      <td>1.300</td>\n",
       "      <td>1.880</td>\n",
       "      <td>[2,3,4,5]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Log partition coefficient</td>\n",
       "      <td>LogPartCoef</td>\n",
       "      <td>PFPeA</td>\n",
       "      <td>PFPeA Log Koc (soils/sediments)</td>\n",
       "      <td>1.370</td>\n",
       "      <td>log L/kg OC</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[2,3,4,5]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Log partition coefficient</td>\n",
       "      <td>LogPartCoef</td>\n",
       "      <td>PFHxA</td>\n",
       "      <td>PFHxA Log Koc (soils/sediments)</td>\n",
       "      <td>1.770</td>\n",
       "      <td>log L/kg OC</td>\n",
       "      <td>1.310</td>\n",
       "      <td>2.100</td>\n",
       "      <td>[2,3,4,5]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Log partition coefficient</td>\n",
       "      <td>LogPartCoef</td>\n",
       "      <td>PFHpA</td>\n",
       "      <td>PFHpA Log Koc (soils/sediments)</td>\n",
       "      <td>1.970</td>\n",
       "      <td>log L/kg OC</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.190</td>\n",
       "      <td>[2,3,4,5]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Log partition coefficient</td>\n",
       "      <td>LogPartCoef</td>\n",
       "      <td>PFNA</td>\n",
       "      <td>PFNA Log Koc (soils/sediments)</td>\n",
       "      <td>2.630</td>\n",
       "      <td>log L/kg OC</td>\n",
       "      <td>2.300</td>\n",
       "      <td>3.180</td>\n",
       "      <td>[2,3,4,5]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Log partition coefficient</td>\n",
       "      <td>LogPartCoef</td>\n",
       "      <td>PFDA</td>\n",
       "      <td>PFDA Log Koc (soils/sediments)</td>\n",
       "      <td>3.240</td>\n",
       "      <td>log L/kg OC</td>\n",
       "      <td>2.650</td>\n",
       "      <td>3.780</td>\n",
       "      <td>[2,3,4,5]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Log partition coefficient</td>\n",
       "      <td>LogPartCoef</td>\n",
       "      <td>PFBS</td>\n",
       "      <td>PFBS Log Koc (soils/sediments)</td>\n",
       "      <td>1.510</td>\n",
       "      <td>log L/kg OC</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.790</td>\n",
       "      <td>[2,3,4,5]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Log partition coefficient</td>\n",
       "      <td>LogPartCoef</td>\n",
       "      <td>PFHxS</td>\n",
       "      <td>PFHxS Log Koc (soils/sediments)</td>\n",
       "      <td>2.790</td>\n",
       "      <td>log L/kg OC</td>\n",
       "      <td>2.050</td>\n",
       "      <td>2.875</td>\n",
       "      <td>[2,3,4,5]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Land application</td>\n",
       "      <td>LandApp</td>\n",
       "      <td>appl_dens</td>\n",
       "      <td>kg dry applied per area</td>\n",
       "      <td>2.000</td>\n",
       "      <td>kg TS/m2</td>\n",
       "      <td>0.800</td>\n",
       "      <td>18.000</td>\n",
       "      <td>[7]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Land application</td>\n",
       "      <td>LandApp</td>\n",
       "      <td>depth_mix</td>\n",
       "      <td>Depth of soil mixed</td>\n",
       "      <td>0.100</td>\n",
       "      <td>m</td>\n",
       "      <td>0.050</td>\n",
       "      <td>0.200</td>\n",
       "      <td>[8]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Soil Properties</td>\n",
       "      <td>SoilProp</td>\n",
       "      <td>bulk_dens</td>\n",
       "      <td>Soil bulk density - wet</td>\n",
       "      <td>1300.000</td>\n",
       "      <td>kg/m3</td>\n",
       "      <td>1100.000</td>\n",
       "      <td>1800.000</td>\n",
       "      <td>[9]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Soil Properties</td>\n",
       "      <td>SoilProp</td>\n",
       "      <td>ts_cont</td>\n",
       "      <td>Soil total solids content -wet</td>\n",
       "      <td>0.850</td>\n",
       "      <td>kg TS/kg</td>\n",
       "      <td>0.700</td>\n",
       "      <td>1.000</td>\n",
       "      <td>[10]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Soil Properties</td>\n",
       "      <td>SoilProp</td>\n",
       "      <td>C_cont</td>\n",
       "      <td>Soil organic C content -dry</td>\n",
       "      <td>0.015</td>\n",
       "      <td>fraction TS</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.050</td>\n",
       "      <td>[9]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Precipitation Data</td>\n",
       "      <td>Precip</td>\n",
       "      <td>ann_precip</td>\n",
       "      <td>Annual precipitation</td>\n",
       "      <td>1.000</td>\n",
       "      <td>m/yr</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[11]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Precipitation Data</td>\n",
       "      <td>Precip</td>\n",
       "      <td>frac_runoff</td>\n",
       "      <td>Run-off fraction of precipitation</td>\n",
       "      <td>0.050</td>\n",
       "      <td>frac</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>[12]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Precipitation Data</td>\n",
       "      <td>Precip</td>\n",
       "      <td>frac_ET</td>\n",
       "      <td>Evapotranspiration fraction of precipitation</td>\n",
       "      <td>0.500</td>\n",
       "      <td>frac</td>\n",
       "      <td>0.033</td>\n",
       "      <td>1.000</td>\n",
       "      <td>[13]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Volatilization</td>\n",
       "      <td>Volatilization</td>\n",
       "      <td>frac_vol_loss</td>\n",
       "      <td>Fraction of PFAS lost to volatilization</td>\n",
       "      <td>0.000</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     Category  Dictonary_Name Parameter Name  \\\n",
       "0   Log partition coefficient  LogPartCoef     PFOA            \n",
       "1   Log partition coefficient  LogPartCoef     PFOS            \n",
       "2   Log partition coefficient  LogPartCoef     PFBA            \n",
       "3   Log partition coefficient  LogPartCoef     PFPeA           \n",
       "4   Log partition coefficient  LogPartCoef     PFHxA           \n",
       "5   Log partition coefficient  LogPartCoef     PFHpA           \n",
       "6   Log partition coefficient  LogPartCoef     PFNA            \n",
       "7   Log partition coefficient  LogPartCoef     PFDA            \n",
       "8   Log partition coefficient  LogPartCoef     PFBS            \n",
       "9   Log partition coefficient  LogPartCoef     PFHxS           \n",
       "10  Land application           LandApp         appl_dens       \n",
       "11  Land application           LandApp         depth_mix       \n",
       "12  Soil Properties            SoilProp        bulk_dens       \n",
       "13  Soil Properties            SoilProp        ts_cont         \n",
       "14  Soil Properties            SoilProp        C_cont          \n",
       "15  Precipitation Data         Precip          ann_precip      \n",
       "16  Precipitation Data         Precip          frac_runoff     \n",
       "17  Precipitation Data         Precip          frac_ET         \n",
       "18  Volatilization             Volatilization  frac_vol_loss   \n",
       "\n",
       "                           Parameter Description    amount         unit  \\\n",
       "0   PFOA Log Koc (soils/sediments)                2.190     log L/kg OC   \n",
       "1   PFOS Log Koc  (soils/sediments)               3.040     log L/kg OC   \n",
       "2   PFBA Log Koc  (soils/sediments)               1.880     log L/kg OC   \n",
       "3   PFPeA Log Koc (soils/sediments)               1.370     log L/kg OC   \n",
       "4   PFHxA Log Koc (soils/sediments)               1.770     log L/kg OC   \n",
       "5   PFHpA Log Koc (soils/sediments)               1.970     log L/kg OC   \n",
       "6   PFNA Log Koc (soils/sediments)                2.630     log L/kg OC   \n",
       "7   PFDA Log Koc (soils/sediments)                3.240     log L/kg OC   \n",
       "8   PFBS Log Koc (soils/sediments)                1.510     log L/kg OC   \n",
       "9   PFHxS Log Koc (soils/sediments)               2.790     log L/kg OC   \n",
       "10  kg dry applied per area                       2.000     kg TS/m2      \n",
       "11  Depth of soil mixed                           0.100     m             \n",
       "12  Soil bulk density - wet                       1300.000  kg/m3         \n",
       "13  Soil total solids content -wet                0.850     kg TS/kg      \n",
       "14  Soil organic C content -dry                   0.015     fraction TS   \n",
       "15  Annual precipitation                          1.000     m/yr          \n",
       "16  Run-off fraction of precipitation             0.050     frac          \n",
       "17  Evapotranspiration fraction of precipitation  0.500     frac          \n",
       "18  Fraction of PFAS lost to volatilization       0.000     fraction      \n",
       "\n",
       "     minimum   maximum  Reference  \n",
       "0   1.300     4.500     [2,3,4,5]  \n",
       "1   2.400     4.700     [2,3,4,5]  \n",
       "2   1.300     1.880     [2,3,4,5]  \n",
       "3  NaN       NaN        [2,3,4,5]  \n",
       "4   1.310     2.100     [2,3,4,5]  \n",
       "5  NaN        2.190     [2,3,4,5]  \n",
       "6   2.300     3.180     [2,3,4,5]  \n",
       "7   2.650     3.780     [2,3,4,5]  \n",
       "8  NaN        1.790     [2,3,4,5]  \n",
       "9   2.050     2.875     [2,3,4,5]  \n",
       "10  0.800     18.000    [7]        \n",
       "11  0.050     0.200     [8]        \n",
       "12  1100.000  1800.000  [9]        \n",
       "13  0.700     1.000     [10]       \n",
       "14  0.005     0.050     [9]        \n",
       "15 NaN       NaN        [11]       \n",
       "16 NaN       NaN        [12]       \n",
       "17  0.033     1.000     [13]       \n",
       "18 NaN       NaN                   "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LandApp = pspd.LandApp()\n",
    "LandApp.InputData.Data[['Category','Dictonary_Name','Parameter Name', 'Parameter Description', 'amount', 'unit','minimum','maximum','Reference']]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Incoming Compost to land application"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Parameter</th>\n",
       "      <th>Unit</th>\n",
       "      <th>Amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Mass flow</td>\n",
       "      <td>kg</td>\n",
       "      <td>1000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Solids flow</td>\n",
       "      <td>kg</td>\n",
       "      <td>600.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Moisture flow</td>\n",
       "      <td>kg</td>\n",
       "      <td>400.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>VS flow</td>\n",
       "      <td>kg</td>\n",
       "      <td>360.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Carbon flow</td>\n",
       "      <td>kg</td>\n",
       "      <td>168.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>PFOA</td>\n",
       "      <td>μg</td>\n",
       "      <td>5240.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>PFOS</td>\n",
       "      <td>μg</td>\n",
       "      <td>7375.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>PFBA</td>\n",
       "      <td>μg</td>\n",
       "      <td>3267.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>PFPeA</td>\n",
       "      <td>μg</td>\n",
       "      <td>3424.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>PFHxA</td>\n",
       "      <td>μg</td>\n",
       "      <td>16407.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>PFHpA</td>\n",
       "      <td>μg</td>\n",
       "      <td>826.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>PFNA</td>\n",
       "      <td>μg</td>\n",
       "      <td>1045.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>PFDA</td>\n",
       "      <td>μg</td>\n",
       "      <td>2710.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>PFBS</td>\n",
       "      <td>μg</td>\n",
       "      <td>7360.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>PFHxS</td>\n",
       "      <td>μg</td>\n",
       "      <td>190.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Parameter Unit   Amount\n",
       "0   Mass flow      kg   1000   \n",
       "1   Solids flow    kg   600.0  \n",
       "2   Moisture flow  kg   400.0  \n",
       "3   VS flow        kg   360.0  \n",
       "4   Carbon flow    kg   168.0  \n",
       "5   PFOA           μg   5240.0 \n",
       "6   PFOS           μg   7375.0 \n",
       "7   PFBA           μg   3267.0 \n",
       "8   PFPeA          μg   3424.0 \n",
       "9   PFHxA          μg   16407.0\n",
       "10  PFHpA          μg   826.0  \n",
       "11  PFNA           μg   1045.0 \n",
       "12  PFDA           μg   2710.0 \n",
       "13  PFBS           μg   7360.0 \n",
       "14  PFHxS          μg   190.0  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "IncominWaste = pspd.IncomFlow()\n",
    "IncominWaste.set_flow('Compost', 1000)\n",
    "IncominWaste.calc()\n",
    "Compost = IncominWaste.Inc_flow\n",
    "Compost.report()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## PFAS balance in land application"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Volatilized</th>\n",
       "      <th>Remaining in Soil</th>\n",
       "      <th>Leachate</th>\n",
       "      <th>Runoff</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>PFOA</th>\n",
       "      <td>0.0</td>\n",
       "      <td>25.35</td>\n",
       "      <td>67.19</td>\n",
       "      <td>7.47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFOS</th>\n",
       "      <td>0.0</td>\n",
       "      <td>81.56</td>\n",
       "      <td>16.60</td>\n",
       "      <td>1.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFBA</th>\n",
       "      <td>0.0</td>\n",
       "      <td>7.10</td>\n",
       "      <td>83.61</td>\n",
       "      <td>9.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFPeA</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.10</td>\n",
       "      <td>89.91</td>\n",
       "      <td>9.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFHxA</th>\n",
       "      <td>0.0</td>\n",
       "      <td>3.68</td>\n",
       "      <td>86.69</td>\n",
       "      <td>9.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFHpA</th>\n",
       "      <td>0.0</td>\n",
       "      <td>11.14</td>\n",
       "      <td>79.98</td>\n",
       "      <td>8.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFNA</th>\n",
       "      <td>0.0</td>\n",
       "      <td>59.62</td>\n",
       "      <td>36.34</td>\n",
       "      <td>4.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFDA</th>\n",
       "      <td>0.0</td>\n",
       "      <td>87.89</td>\n",
       "      <td>10.90</td>\n",
       "      <td>1.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFBS</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.45</td>\n",
       "      <td>89.59</td>\n",
       "      <td>9.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFHxS</th>\n",
       "      <td>0.0</td>\n",
       "      <td>69.75</td>\n",
       "      <td>27.22</td>\n",
       "      <td>3.02</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Volatilized  Remaining in Soil  Leachate  Runoff\n",
       "PFOA   0.0          25.35              67.19     7.47  \n",
       "PFOS   0.0          81.56              16.60     1.84  \n",
       "PFBA   0.0          7.10               83.61     9.29  \n",
       "PFPeA  0.0          0.10               89.91     9.99  \n",
       "PFHxA  0.0          3.68               86.69     9.63  \n",
       "PFHpA  0.0          11.14              79.98     8.89  \n",
       "PFNA   0.0          59.62              36.34     4.04  \n",
       "PFDA   0.0          87.89              10.90     1.21  \n",
       "PFBS   0.0          0.45               89.59     9.95  \n",
       "PFHxS  0.0          69.75              27.22     3.02  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LandApp.calc(Inc_flow=Compost)\n",
    "LandApp.report(normalized=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "LandApp.plot_sankey()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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laxbtGiRVaNGDatatWrWK6+8YlmWZb344ovW/PnzLcuyrFtvvdUqU6aMVa9ePatevXpW586dLcuyrO+//94KCQmxwsLCrJCQEGvy5Mm2HYNcPSDaykZ7Vxh+1GbbQ222yNW7XJutqbJcQMZlqC5dujBr1iy6du1K8+bNKV26NAB33XUXa9eu5bbbbjtvu/fff5+vvvoKgAMHDrBnzx6uueaaHMVw7Ngx7rnnHmbPnk1QUBDLli1jx44dzrFRp06dYs+ePaxdu5bevXvj7u5OhQoVaNmyZc4PPJd06NCBDh06nPfcyJEjnb+vWLHiktvdeOON7Ny5M09jE5HCR222SN7SsAEX0KVLF1auXMmWLVuIj48nPDz8itusXr2aFStW8OOPP7J9+3YiIiJISEjI0f5TU1Pp1asXw4cPd94cYFkWY8eOZdu2bWzbto29e/fSpk2bHNUvIlKYqM0WyVtKXl1AQEAALVq0oH///vTu3ZsbbriBNWvWcOzYMVJTU5k5cya33HLLeducOnWKEiVK4Ofnx6+//sqGDRucr3l6epKcnJzl/Q8bNoywsDB69erlfK5t27ZMmDDBWc/vv/9OXFwczZo144svviA1NZXDhw+zatWqqzx6ERHXojZbJG9p2ICL6N27N127dmXWrFmUL1+e0aNH06JFCyzLomPHjnTp0uW88u3atWPixInUqVOHWrVq0bhxY+drDzzwAGFhYdSvX58ZM2Zccd9jxowhODjY2XswcuRIBgwYwL59+6hfvz6WZVG6dGm+/vprunbtynfffUfdunWpXLkyTZo0ydX3QUTEFajNFsk7xjEmNmsiIyOt6OjoPAxHRCRvGGM2W5YVaXcc+Ulttoi4qsu12Ro2ICIiIiIuQ8mriIiIiLgMJa9F3NKlS6lVqxbVq1dn9OjRdocjIiIicllKXouw1NRUBg8ezJIlS9i9ezczZ85k9+7ddoclIiKZUIeDiJLXIm3jxo1Ur16datWq4eXlRa9evZg/f77dYYmIyCWow0HEQclrERYTE8O1117rfFypUiViYmJsjEhERDKjDgcRByWvIiIiLkAdDiIOSl6LsIoVK3LgwAHn44MHD1KxYkUbIxIRERG5PCWvRVjDhg3Zs2cPe/fuJSkpiVmzZhEVFWV3WCIicgnqcBBxUPJahHl4eDBu3Djatm1LnTp16NGjB8HBwXaHJSIil6AOBxEHD7sDEHt16NCBDh062B2GiIhcwbkdDqmpqfTv318dDlIkKXkVERFxEepwENGwARERERFxIUpeRURERMRlKHkVEREREZeh5FVEREREXIaSVxERERFxGUpeRURERMRlKHkVEREREZeh5FVEREREXIaSVxERERFxGUpeRURERMRlKHkVEREREZeh5FVEREREXIaSVxERERFxGUpeRURERMRlKHkVEREREZeh5FVEREREXIaSVxERERFxGcayrKwXNuYosD/vwhERyTPXWZZV2u4g8pPabBFxYZm22dlKXkVERERE7KRhAyIiIiLiMpS8ioiIiIjLUPIqIiIiIi5DyauIiIiIuAwlryIiIiLiMpS8ioiIiIjLUPIqIiIiIi5DyauIiIiIuAwlryIiIiLiMv4PzL2GLHLbOG0AAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 864x360 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "LandApp.plot_sankey_report(margin=0.5)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
