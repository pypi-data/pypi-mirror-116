# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protopia.api.noise.v1beta1 import distribution_pb2 as protopia_dot_api_dot_noise_dot_v1beta1_dot_distribution__pb2
from protopia.api.noise.v1beta1.internal import store_pb2 as protopia_dot_api_dot_noise_dot_v1beta1_dot_internal_dot_store__pb2


class StoreStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StoreNoiseDistribution = channel.unary_unary(
                '/Store/StoreNoiseDistribution',
                request_serializer=protopia_dot_api_dot_noise_dot_v1beta1_dot_internal_dot_store__pb2.StoreNoiseDistributionRequest.SerializeToString,
                response_deserializer=protopia_dot_api_dot_noise_dot_v1beta1_dot_internal_dot_store__pb2.StoreNoiseDistributionResponse.FromString,
                )
        self.RetrieveNoiseDistribution = channel.unary_unary(
                '/Store/RetrieveNoiseDistribution',
                request_serializer=protopia_dot_api_dot_noise_dot_v1beta1_dot_internal_dot_store__pb2.RetrieveNoiseDistributionRequest.SerializeToString,
                response_deserializer=protopia_dot_api_dot_noise_dot_v1beta1_dot_distribution__pb2.EncryptedNoiseDistribution.FromString,
                )


class StoreServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StoreNoiseDistribution(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveNoiseDistribution(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StoreServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StoreNoiseDistribution': grpc.unary_unary_rpc_method_handler(
                    servicer.StoreNoiseDistribution,
                    request_deserializer=protopia_dot_api_dot_noise_dot_v1beta1_dot_internal_dot_store__pb2.StoreNoiseDistributionRequest.FromString,
                    response_serializer=protopia_dot_api_dot_noise_dot_v1beta1_dot_internal_dot_store__pb2.StoreNoiseDistributionResponse.SerializeToString,
            ),
            'RetrieveNoiseDistribution': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveNoiseDistribution,
                    request_deserializer=protopia_dot_api_dot_noise_dot_v1beta1_dot_internal_dot_store__pb2.RetrieveNoiseDistributionRequest.FromString,
                    response_serializer=protopia_dot_api_dot_noise_dot_v1beta1_dot_distribution__pb2.EncryptedNoiseDistribution.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Store', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Store(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StoreNoiseDistribution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Store/StoreNoiseDistribution',
            protopia_dot_api_dot_noise_dot_v1beta1_dot_internal_dot_store__pb2.StoreNoiseDistributionRequest.SerializeToString,
            protopia_dot_api_dot_noise_dot_v1beta1_dot_internal_dot_store__pb2.StoreNoiseDistributionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveNoiseDistribution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Store/RetrieveNoiseDistribution',
            protopia_dot_api_dot_noise_dot_v1beta1_dot_internal_dot_store__pb2.RetrieveNoiseDistributionRequest.SerializeToString,
            protopia_dot_api_dot_noise_dot_v1beta1_dot_distribution__pb2.EncryptedNoiseDistribution.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
