Metadata-Version: 2.1
Name: je-auto-control
Version: 0.0.27
Summary: auto control gui
Home-page: https://github.com/JE-Chen/AutoControlGUI_JE
Author: JE-Chen
Author-email: zenmailman@gmail.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3.5
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Environment :: Win32 (MS Windows)
Classifier: Environment :: MacOS X
Classifier: Environment :: X11 Applications
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
Requires-Dist: je-open-cv
Requires-Dist: pillow
Requires-Dist: numpy
Requires-Dist: pyobjc-core ; platform_system == "Darwin"
Requires-Dist: pyobjc ; platform_system == "Darwin"
Requires-Dist: python3-Xlib ; platform_system == "Linux"

# je_auto_control

## install

```
pip install je_auto_control
```

## Info

* Python & pip require version
  * Python 3.5 & up 
  * pip 19.3 & up


* Dev env
    * windows 11
    * osx 11 big sur
    * ubuntu 20.0.4


* Test on
    * windows 10 ~ 11
    * osx 10.5 ~ 11 big sur
    * ubuntu 20.0.4


* Notice
  * if you want to run image test then change default image path to your image path
  * if you are using XWindows os ,like ubuntu you may need to update pillow

## TODO

* more feature

## example

* All test and example in test dir

## how to use

#### keyboard type

```python
import time

from je_auto_control import type
from je_auto_control import keys_table

"""
check keys
"""
print(keys_table.keys())

"""
Linux in every type and press then release need stop 0.01 time in my computer,i'm not sure it's right?

example:
    type("T")
    time.sleep(0.01)
    type("E")
    time.sleep(0.01)
    type("S")
    time.sleep(0.01)
    type("T")
    time.sleep(0.01)

or:
    press_key("T")
    release_key("T")
    time.sleep(0.01)
"""

type("T")
type("E")
type("S")
type("T")
```

#### keyboard key is press
```python
import sys

from je_auto_control import check_key_is_press

# because os key_code not equal
while True:
    # linux key backspace
    if sys.platform in ["linux", "linux2"]:
        if check_key_is_press(22):
            sys.exit(0)
    # osx key F5
    if sys.platform in ["darwin"]:
        if check_key_is_press(0x60):
            sys.exit(0)
    # windows key a or you can use check_key_is_press(ord("A"))
    if sys.platform in ["win32", "cygwin", "msys"]:
        if check_key_is_press("A"):
            sys.exit(0)
```

#### mouse

```python
import time

from je_auto_control import position
from je_auto_control import set_position
from je_auto_control import press_mouse
from je_auto_control import release_mouse
from je_auto_control import click_mouse
from je_auto_control import mouse_table

time.sleep(1)

print(position())
set_position(809, 388)

print(mouse_table.keys())

press_mouse("mouse_right")
release_mouse("mouse_right")
press_mouse("mouse_left")
release_mouse("mouse_left")
click_mouse("mouse_left")

```

#### scroll

```python
from je_auto_control import scroll

scroll(100)

```

#### screen

```python
from je_auto_control import size

print(size())
```

#### locate image

```python
import time

from je_auto_control import locate_image_center

time.sleep(2)
# detect_threshold 0~1 , 1 is absolute equal
image_data = locate_image_center("../../../test_template.png", detect_threshold=0.9, draw_image=False)
print(image_data)
```

#### locate all image

```python
import time

from je_auto_control import locate_all_image

time.sleep(2)
# detect_threshold 0~1 , 1 is absolute equal
image_data = locate_all_image("../../../test_template.png", detect_threshold=0.9, draw_image=False)
print(image_data)
```

#### locate and click image in center

```python
import time

from je_auto_control import locate_and_click

time.sleep(2)
# detect_threshold 0~1 , 1 is absolute equal
image_data = locate_and_click("../../../test_template.png", "mouse_left", detect_threshold=0.9,
                              draw_image=False)
print(image_data)

```


