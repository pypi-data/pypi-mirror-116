"""
Autogenerated module using `pop-create-idem <https://gitlab.com/saltstack/pop/pop-create-idem>`__
"""
from typing import Dict
from typing import List


async def create(
    hub,
    ctx,
    logger_definition_id: str,
    amzn_client_token: str = None,
    loggers: List = None,
) -> Dict:
    r"""
    **Autogenerated function**

    Creates a version of a logger definition that has already been defined.

    Args:
        amzn_client_token(str, optional): A client token used to correlate requests and responses. Defaults to None.
        logger_definition_id(str): The ID of the logger definition.
        loggers(List, optional): A list of loggers. Defaults to None.

    Returns:
        Dict

    Examples:
        Call from code:

        .. code-block:: python

            await hub.exec.aws_auto.greengrass.logger_definition.version.create(
                ctx, logger_definition_id=value
            )

        Call from CLI:

        .. code-block:: bash

            $ idem exec aws_auto.greengrass.logger_definition.version.create logger_definition_id=value
    """
    return await hub.tool.aws.client.exec(
        ctx,
        service_name="greengrass",
        operation="create_logger_definition_version",
        op_kwargs={
            "AmznClientToken": amzn_client_token,
            "LoggerDefinitionId": logger_definition_id,
            "Loggers": loggers,
        },
    )


async def get(
    hub,
    ctx,
    logger_definition_id: str,
    logger_definition_version_id: str,
    next_token: str = None,
) -> Dict:
    r"""
    **Autogenerated function**

    Retrieves information about a logger definition version.

    Args:
        logger_definition_id(str): The ID of the logger definition.
        logger_definition_version_id(str): The ID of the logger definition version. This value maps to the ''Version'' property of the corresponding ''VersionInformation'' object, which is returned by ''ListLoggerDefinitionVersions'' requests. If the version is the last one that was associated with a logger definition, the value also maps to the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
        next_token(str, optional): The token for the next set of results, or ''null'' if there are no additional results. Defaults to None.

    Returns:
        Dict

    Examples:
        Call from code:

        .. code-block:: python

            await hub.exec.aws_auto.greengrass.logger_definition.version.get(
                ctx, logger_definition_id=value, logger_definition_version_id=value
            )

        Call from CLI:

        .. code-block:: bash

            $ idem exec aws_auto.greengrass.logger_definition.version.get logger_definition_id=value, logger_definition_version_id=value
    """
    return await hub.tool.aws.client.exec(
        ctx,
        service_name="greengrass",
        operation="get_logger_definition_version",
        op_kwargs={
            "LoggerDefinitionId": logger_definition_id,
            "LoggerDefinitionVersionId": logger_definition_version_id,
            "NextToken": next_token,
        },
    )


async def list_all(
    hub, ctx, logger_definition_id: str, max_results: str = None, next_token: str = None
) -> Dict:
    r"""
    **Autogenerated function**

    Lists the versions of a logger definition.

    Args:
        logger_definition_id(str): The ID of the logger definition.
        max_results(str, optional): The maximum number of results to be returned per request. Defaults to None.
        next_token(str, optional): The token for the next set of results, or ''null'' if there are no additional results. Defaults to None.

    Returns:
        Dict

    Examples:
        Call from code:

        .. code-block:: python

            await hub.exec.aws_auto.greengrass.logger_definition.version.list_all(
                ctx, logger_definition_id=value
            )

        Call from CLI:

        .. code-block:: bash

            $ idem exec aws_auto.greengrass.logger_definition.version.list_all logger_definition_id=value
    """
    return await hub.tool.aws.client.exec(
        ctx,
        service_name="greengrass",
        operation="list_logger_definition_versions",
        op_kwargs={
            "LoggerDefinitionId": logger_definition_id,
            "MaxResults": max_results,
            "NextToken": next_token,
        },
    )
