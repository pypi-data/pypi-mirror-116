"""
Autogenerated module using `pop-create-idem <https://gitlab.com/saltstack/pop/pop-create-idem>`__
"""
from typing import Dict
from typing import List


async def describe_all(
    hub,
    ctx,
    pool_ids: List = None,
    next_token: str = None,
    max_results: int = None,
    filters: List = None,
) -> Dict:
    r"""
    **Autogenerated function**

    Describes the specified IPv4 address pools.

    Args:
        pool_ids(List, optional): The IDs of the address pools. Defaults to None.
        next_token(str, optional): The token for the next page of results. Defaults to None.
        max_results(int, optional): The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value. Defaults to None.
        filters(List, optional): One or more filters.    tag:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA, specify tag:Owner for the filter name and TeamA for the filter value.    tag-key - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.  . Defaults to None.

    Returns:
        Dict

    Examples:
        Call from code:

        .. code-block:: python

            await hub.exec.aws_auto.ec2.public_ipv4_pool.describe_all(ctx)

        Call from CLI:

        .. code-block:: bash

            $ idem exec aws_auto.ec2.public_ipv4_pool.describe_all
    """
    return await hub.tool.aws.client.exec(
        ctx,
        service_name="ec2",
        operation="describe_public_ipv4_pools",
        op_kwargs={
            "PoolIds": pool_ids,
            "NextToken": next_token,
            "MaxResults": max_results,
            "Filters": filters,
        },
    )
