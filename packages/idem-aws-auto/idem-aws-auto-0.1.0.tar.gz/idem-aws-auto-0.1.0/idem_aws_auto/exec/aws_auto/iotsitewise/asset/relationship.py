"""
Autogenerated module using `pop-create-idem <https://gitlab.com/saltstack/pop/pop-create-idem>`__
"""
from typing import Dict


async def list_all(
    hub,
    ctx,
    asset_id: str,
    traversal_type: str,
    next_token: str = None,
    max_results: int = None,
) -> Dict:
    r"""
    **Autogenerated function**

    Retrieves a paginated list of asset relationships for an asset. You can use this operation to identify an asset's root asset and all associated assets between that asset and its root.

    Args:
        asset_id(str): The ID of the asset.
        traversal_type(str): The type of traversal to use to identify asset relationships. Choose the following option:    PATH_TO_ROOT â€“ Identify the asset's parent assets up to the root asset. The asset that you specify in assetId is the first result in the list of assetRelationshipSummaries, and the root asset is the last result.  .
        next_token(str, optional): The token to be used for the next set of paginated results. Defaults to None.
        max_results(int, optional): The maximum number of results to return for each paginated request. Defaults to None.

    Returns:
        Dict

    Examples:
        Call from code:

        .. code-block:: python

            await hub.exec.aws_auto.iotsitewise.asset.relationship.list_all(
                ctx, asset_id=value, traversal_type=value
            )

        Call from CLI:

        .. code-block:: bash

            $ idem exec aws_auto.iotsitewise.asset.relationship.list_all asset_id=value, traversal_type=value
    """
    return await hub.tool.aws.client.exec(
        ctx,
        service_name="iotsitewise",
        operation="list_asset_relationships",
        op_kwargs={
            "assetId": asset_id,
            "traversalType": traversal_type,
            "nextToken": next_token,
            "maxResults": max_results,
        },
    )
