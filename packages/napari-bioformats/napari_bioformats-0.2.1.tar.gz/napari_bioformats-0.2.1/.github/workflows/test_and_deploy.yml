name: test and deploy

on:
  push:
    branches:
      - master
      - main
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.platform }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        python-version: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          channels: conda-forge
          channel-priority: strict
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        id: cache
        with:
          path: sample_data
          key: ${{ hashFiles('download_bioformats_samples.py') }}

      - name: Install Test Data
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pip install requests
          python download_bioformats_samples.py

      - name: Install dependencies
        run: |
          conda install openjdk
          python -m pip install -U pip
          python -m pip install -e .[testing]

      - name: Test
        run: pytest -v --color=yes --cov=napari_bioformats --cov-report=xml
        env:
          PLATFORM: ${{ matrix.platform }}
          PYTHON: ${{ matrix.python-version }}
          PYVISTA_OFF_SCREEN: True

      - name: Coverage
        uses: codecov/codecov-action@v1

  deploy:
    needs: [test]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -U setuptools setuptools_scm wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}
        run: |
          git tag
          python setup.py sdist bdist_wheel
          twine upload dist/*
