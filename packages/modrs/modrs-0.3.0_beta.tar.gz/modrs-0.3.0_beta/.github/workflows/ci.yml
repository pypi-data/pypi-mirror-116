name: CI

on: 
  push:
    branches: [main]


jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python

      - name: Add poetry to path
        if:  matrix.os != 'windows-latest'
        run: echo "${HOME}/.poetry/bin" >> $GITHUB_PATH
      
      - name: Add poetry to path
        if:  matrix.os == 'windows-latest'
        run: echo "${HOME}/.poetry/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install package deps
        run: | 
          poetry install

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with: 
          toolchain: stable

      - name: Build Python package
        run: poetry run maturin develop --release

  python-publish:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with: 
          toolchain: stable

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Build Python package
        run: poetry run maturin build --release --no-sdist --strip 

      - name: List wheels
        if: matrix.os == 'windows-latest'
        run: dir target\wheels\

      - name: List wheels
        if:  matrix.os != 'windows-latest'
        run: find ./target/wheels/

      # Note: Windows doesn't support glob
      # https://stackoverflow.com/a/52481267/270334
      - name: Install wheels
        if:  matrix.os == 'windows-latest'
        run: pip install --find-links=target\wheels modrs

      - name: Install wheels
        if:  matrix.os != 'windows-latest'
        run: pip install target/wheels/modrs*.whl

      - name: PyPi publish
        # if: github.event_name == 'release' && github.event.action == 'created'
        env:
          MATURIN_PASSWORD: ${{ secrets.PYPI }}
        run: poetry run maturin publish --username __token__
