Metadata-Version: 2.1
Name: ipysimulate
Version: 0.2.1
Summary: Tools to create interactive simulations with IPython and Jupyter.
Home-page: https://github.com/JoelForamitti/ipysimulate
Author: JoÃ«l Foramitti
Author-email: joel.foramitti@uab.cat
License: UNKNOWN
Keywords: ipython,jupyter,widgets
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Framework :: IPython
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Multimedia :: Graphics
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Description-Content-Type: text/markdown
Requires-Dist: ipywidgets (>=7.6.0)
Provides-Extra: docs
Requires-Dist: sphinx (>=3.2.1) ; extra == 'docs'
Requires-Dist: nbsphinx (>=0.7.1) ; extra == 'docs'
Requires-Dist: sphinx-rtd-theme (>=0.4.3) ; extra == 'docs'

IPySimulate - Interactive simulations for Python
================================================

[![PyPI](https://img.shields.io/pypi/v/ipysimulate)](https://pypi.org/project/ipysimulate/)
[![GitHub](https://img.shields.io/github/license/joelforamitti/ipysimulate)](https://github.com/JoelForamitti/ipysimulate/blob/master/LICENSE)
[![Documentation Status](https://readthedocs.org/projects/ipysimulate/badge/?version=stable)](https://ipysimulate.readthedocs.io/en/stable/?badge=stable)

Tools to create interactive simulations with IPython and Jupyter,
including a control panel, widgets to adjust parameters at runtime, 
and dynamic [D3.js](https://d3js.org/) visualizations. 
This package is still in an early stage of development. 
Contributions are welcome :)

**Documentation**: https://ipysimulate.readthedocs.io/  
**Application examples**: https://agentpy.readthedocs.io/en/stable/guide_interactive.html

Installation
------------

To install use pip:

    $ pip install ipysimulate

For a development installation (requires [Node.js](https://nodejs.org) and [Yarn version 1](https://classic.yarnpkg.com/)):

    $ git clone https://github.com/JoelForamitti/ipysimulate.git
    $ cd ipysimulate
    $ pip install -e .
    $ jupyter nbextension install --py --symlink --overwrite --sys-prefix ipysimulate
    $ jupyter nbextension enable --py --sys-prefix ipysimulate

When actively developing your extension for JupyterLab, run the command:

    $ jupyter labextension develop --overwrite ipysimulate

Then you need to rebuild the JS when you make a code change:

    $ cd js
    $ yarn run build

You then need to refresh the JupyterLab page when your javascript changes.




