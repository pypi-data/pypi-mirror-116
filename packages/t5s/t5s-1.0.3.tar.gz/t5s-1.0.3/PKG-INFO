Metadata-Version: 2.1
Name: t5s
Version: 1.0.3
Summary: T5 Summarisation Using Pytorch Lightning
Home-page: https://dagshub.com/gagan3012/summarization.git
License: MIT License
Description: ---
        title: T5-Summarisation
        emoji: âœŒ
        colorFrom: yellow
        colorTo: red
        sdk: streamlit
        app_file: src/visualization/visualize.py
        pinned: false
        ---
        
        summarization
        ==============================
        
        T5 Summarisation Using Pytorch Lightning
        
        Instructions
        ------------
        1. Clone the repo.
        1. Edit the `params.yml` to change the parameters to train the model.
        1. Run `make dirs` to create the missing parts of the directory structure described below. 
        1. *Optional:* Run `make virtualenv` to create a python virtual environment. Skip if using conda or some other env manager.
            1. Run `source env/bin/activate` to activate the virtualenv. 
        1. Run `make requirements` to install required python packages.
        1. Process your data, train and evaluate your model using `make run`
        1. When you're happy with the result, commit files (including .dvc files) to git.
         
        Project Organization
        ------------
        
            â”œâ”€â”€ LICENSE
            â”œâ”€â”€ Makefile           <- Makefile with commands like `make dirs` or `make clean`
            â”œâ”€â”€ README.md          <- The top-level README for developers using this project.
            â”œâ”€â”€ data
            â”‚Â Â  â”œâ”€â”€ processed      <- The final, canonical data sets for modeling.
            â”‚Â Â  â””â”€â”€ raw            <- The original, immutable data dump.
            â”‚
            â”œâ”€â”€ models             <- Trained and serialized models, model predictions, or model summaries
            â”‚
            â”œâ”€â”€ notebooks          <- Jupyter notebooks. Naming convention is a number (for ordering),
            â”‚                         the creator's initials, and a short `-` delimited description, e.g.
            â”‚                         `1.0-jqp-initial-data-exploration`.
            â”œâ”€â”€ references         <- Data dictionaries, manuals, and all other explanatory materials.
            â”‚
            â”œâ”€â”€ reports            <- Generated analysis as HTML, PDF, LaTeX, etc.
            â”‚Â Â  â””â”€â”€ metrics.txt    <- Relevant metrics after evaluating the model.
            â”‚Â Â  â””â”€â”€ training_metrics.txt    <- Relevant metrics from training the model.
            â”‚
            â”œâ”€â”€ requirements.txt   <- The requirements file for reproducing the analysis environment
            â”‚
            â”œâ”€â”€ setup.py           <- makes project pip installable (pip install -e .) so src can be imported
            â”œâ”€â”€ src                <- Source code for use in this project.
            â”‚Â Â  â”œâ”€â”€ __init__.py    <- Makes src a Python module
            â”‚   â”‚
            â”‚Â Â  â”œâ”€â”€ data           <- Scripts to download or generate data
            â”‚Â Â  â”‚Â Â  â””â”€â”€ make_dataset.py
            â”‚Â Â  â”‚Â Â  â””â”€â”€ process_data.py
            â”‚   â”‚
            â”‚Â Â  â”œâ”€â”€ models         <- Scripts to train models 
            â”‚Â Â  â”‚Â Â  â”œâ”€â”€ predict_model.py
            â”‚Â Â  â”‚Â Â  â””â”€â”€ train_model.py
            â”‚Â Â  â”‚Â Â  â””â”€â”€ evaluate_model.py
            â”‚Â Â  â”‚Â Â  â””â”€â”€ model.py
            â”‚   â”‚
            â”‚Â Â  â””â”€â”€ visualization  <- Scripts to create exploratory and results oriented visualizations
            â”‚Â Â      â””â”€â”€ visualize.py
            â”‚
            â”œâ”€â”€ tox.ini            <- tox file with settings for running tox; see tox.testrun.org
            â””â”€â”€ data.dvc          <- Traing a model on the processed data.
        
        
        --------
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
