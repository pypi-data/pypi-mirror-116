# [tool.poetry]
# name = "Flask-Mailing"
# version = "0.0.1"
# description = "Flask mail system sending mails(individual, bulk) attachments(individual, bulk) asynchroniously."
# authors = ["Aniket Sarkar <aniketsarkar@yahoo.com>"]
# license = "MIT"
# readme="README.md"
# repository="https://github.com/marktennyson/flask-mailing"
# keywords=["flask", "mail", "smtp", "flask-mail", "flask-mailing", "flask-mailman"]
# exclude = ["docs", "tests*"]
# classifiers=[
#         "Development Status :: 4 - Beta",
#         "Intended Audience :: Developers",
#         "License :: OSI Approved :: MIT License",
#         "Framework :: Flask",
#         "Topic :: Software Development :: Build Tools",
#         "Topic :: Communications :: Email",
#         "Programming Language :: Python :: 3",
#         "Programming Language :: Python :: 3.6",
#         "Programming Language :: Python :: 3.7",
#         "Programming Language :: Python :: 3.8",
#         "Programming Language :: Python :: 3.9",
#     ]

# [tool.poetry.dependencies]
# python = "^3.6.2"
# flask = ">= 2.0"
# aiosmtplib = ">= 1.1.6"
# aioredis =">= 2.0.0"
# asgiref =">= 3.4.1"
# blinker = ">= 1.4"
# pydantic = ">= 1.8.2"
# email-validator = ">= 1.1.3"
# httpx = ">= 0.18.2"
# typing-extensions = ">= 3.10.0.0"
# fakeredis = ">=1.0"

# black  = { version = "^21.5b2", optional = true}
# isort  = { version = "^5.8.0", optional = true}
# flake8  = { version = "^3.9.2", optional = true}
# pytest  = { version = "^6.2.4", optional = true}
# pytest-cov  = { version = "^2.12.0", optional = true}
# tox  = { version = "^3.20.1", optional = true}
# virtualenv  = { version = "^20.2.2", optional = true}
# pip  = { version = "^20.3.1", optional = true}
# twine  = { version = "^3.3.0", optional = true}
# pre-commit = {version = "^2.12.0", optional = true}
# toml = {version = "^0.10.2", optional = true}
# bump2version = {version = "^1.0.1", optional = true}

# [tool.poetry.extras]
# test = [
#     "pytest",
#     "black",
#     "isort",
#     "flake8",
#     "pytest-cov"
#     ]

# dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml", "bump2version"]

# doc = [
#     "mkdocs",
#     "mkdocs-include-markdown-plugin",
#     "mkdocs-material",
#     "mkdocstrings",
#     "mkdocs-material-extension",
#     "mkdocs-autorefs"
#     ]

# [tool.black]
# line-length = 120
# skip-string-normalization = true
# target-version = ['py36', 'py37', 'py38']
# include = '\.pyi?$'
# exclude = '''
# /(
#     \.eggs
#   | \.git
#   | \.hg
#   | \.mypy_cache
#   | \.tox
#   | \.venv
#   | _build
#   | buck-out
#   | build
#   | dist
# )/
# '''

# [tool.isort]
# multi_line_output = 3
# include_trailing_comma = true
# force_grid_wrap = 0
# use_parentheses = true
# ensure_newline_before_comments = true
# line_length = 120
# skip_gitignore = true
# # you can skip files as below
# #skip_glob = docs/conf.py

# [build-system]
# requires = ["poetry-core>=1.0.0"]
# build-backend = "poetry.core.masonry.api"