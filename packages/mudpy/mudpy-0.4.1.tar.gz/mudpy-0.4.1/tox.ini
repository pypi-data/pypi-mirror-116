# Copyright (c) 2016-2021 mudpy authors. Permission to use, copy,
# modify, and distribute this software is granted under terms
# provided in the LICENSE file distributed with this software.

[tox]
minversion = 3.18
envlist = bandit, codespell, dist, docs, flake8, yamllint, selftest_config, py3
skipsdist = True
ignore_basepython_conflict = True

[testenv]
description = run the functional selftest with optimized configuration
basepython = python3
usedevelop = True
# TODO(fungi) Switch this to "error" once the following are solved
#
# py310... Cython.Compiler.Main raises FutureWarning "Cython directive
#  'language_level' not set, using 2 for now (Py2). This will change in a later
#  release!" but this can't be matched by message because it contains a comma
# py310... distutils.command.install raises DeprecationWarning "The
#   distutils.sysconfig module is deprecated, use sysconfig instead" but this
#   can't be matched by message because it contains a comma
# py310... importlib._bootstrap raises ImportWarning
#   "_SixMetaPathImporter.find_spec() not found; falling back to find_module()"
#   but this can't be matched by message for unknown reasons
# py310... pip._vendor.urllib3.connection and pip._vendor.urllib3.util.ssl_
#   both raise DeprecationWarning "ssl module: PROTOCOL_TLS is deprecated" but
#   this can't be matched by message because it contains a colon
# py310... wheel.bdist_wheel raises DeprecationWarning "The \"license_file\"
#   option is deprecated. Use \"license_files\" instead."
# multiple callers raise DeprecationWarning "The distutils package is
#   deprecated and slated for removal in Python 3.12. Use setuptools or check
#   PEP 632 for potential alternatives"
# multiple callers raise DeprecationWarning "Creating a LegacyVersion has been
#   deprecated and will be removed in the next major release"
setenv =
    PYTHONWARNINGS = error, ignore::FutureWarning:Cython.Compiler.Main, ignore::DeprecationWarning:setuptools.config, ignore::DeprecationWarning:distutils.command.install, ignore::ImportWarning:importlib._bootstrap, ignore::DeprecationWarning:pip._vendor.urllib3.connection, ignore::DeprecationWarning:pip._vendor.urllib3.util.ssl_, ignore:The "license_file" option is deprecated. Use "license_files" instead.:DeprecationWarning:wheel.bdist_wheel, ignore:The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives:DeprecationWarning, ignore:Creating a LegacyVersion has been deprecated and will be removed in the next major release:DeprecationWarning
    VIRTUALENV_CREATOR = venv
commands = mudpy_selftest mudpy/tests/fixtures/test_daemon.yaml

[testenv:bandit]
description = check for potential security risks in source code
deps = bandit
commands = bandit -r mudpy -x mudpy/tests {posargs}
usedevelop = False

[testenv:codespell]
description = find common spelling mistakes in code and documentation
deps = codespell
commands = codespell {posargs}
usedevelop = False

[testenv:demo]
description = start an interactive demo with the sample config
commands = mudpy {posargs}

[testenv:dist]
description = build release artifacts and check for conformance
allowlist_externals = rm
deps =
    build
    twine
commands =
    rm -fr {toxinidir}/dist
    python -m build
    twine check --strict {toxinidir}/dist/*
usedevelop = False

[testenv:docs]
# Build an sdist into a temporary location so we'll have AUTHORS and ChangeLog
# files to include. Keep usedevelop on so that the project dependencies will be
# installed in the venv.
description = generate hypertext documentation
allowlist_externals = rm
deps =
    build
    sphinx
commands =
    rm -fr {toxinidir}/doc/build
    python -m build --outdir={toxinidir}/doc/build/dist --sdist
    sphinx-build -W -d doc/build/doctrees -b html doc/source/ doc/build/html

[testenv:flake8]
description = style checks and static analysis of source code
deps =
    flake8
    flake8-bugbear
commands = flake8 {posargs}
usedevelop = False

[testenv:selftest_config]
description = run the selftest with the included sample config
commands = mudpy_selftest etc/mudpy.yaml

[testenv:yamllint]
# Run the selftest before checking YAML files so we'll be sure to also catch at
# least some which are generated by the application, making sure it creates
# them with the same style we enforce for those carried in the repository.
description = test data files for correct syntax and formatting
deps = yamllint
commands =
    mudpy_selftest mudpy/tests/fixtures/test_daemon.yaml
    yamllint --strict {posargs} .

[flake8]
show-source = True
exclude = .git, .tox, *lib/python*, *egg, build
