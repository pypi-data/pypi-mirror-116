# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['zefram']

package_data = \
{'': ['*']}

install_requires = \
['SQLAlchemy>=1.4.22,<2.0.0', 'numpy>=1.21.2,<2.0.0']

setup_kwargs = {
    'name': 'zefram',
    'version': '0.1.3',
    'description': 'Database of zeolite framework characteristics',
    'long_description': '==============\nzefram package\n==============\n\nA convenent, pythnonic way of interacting with data from the [IZA Database of Zeolite Structures](http://www.iza-structure.org/databases/).\n\n\nDependencies\n============\n\n* SQLAlchemy_\n* numpy_\n\nInstallation\n============\n\nSimplest way to install ``zefram`` is with ``pip``:\n\n.. code-block:: bash\n\n   pip install zefram\n\n\n.. _SQLalchemy: http://www.sqlalchemy.org\n.. _numpy: http://www.numpy.org\n\nUsage\n=====\n\nThe package exposes a simple API to access the database. ``framework`` method\nacceps either three letter framework codes such as *AFI* or *MFI* or a list of\nsuch strings returning a ``Framework`` object (or list of objects). The example\nbelow shows also the accessible attributes of the ``Framework`` object\n\n.. code-block:: python\n\n    >>> from zefram import framework\n    >>> afi = framework(\'AFI\')\n    >>> sorted(list(afi.__dict__.keys()))\n    [\'_sa_instance_state\',\n    \'_spacegroup_id\',\n    \'a\',\n    \'accessible_area\',\n    \'accessible_area_m2pg\',\n    \'accessible_volume\',\n    \'accessible_volume_pct\',\n    \'alpha\',\n    \'atoms\',\n    \'b\',\n    \'beta\',\n    \'c\',\n    \'cages\',\n    \'channel_dim\',\n    \'channels\',\n    \'cif\',\n    \'code\',\n    \'connections\',\n    \'framework_density\',\n    \'gamma\',\n    \'id\',\n    \'isdisordered\',\n    \'isinterrupted\',\n    \'junctions\',\n    \'lcd\',\n    \'maxdsd_a\',\n    \'maxdsd_b\',\n    \'maxdsd_c\',\n    \'maxdsi\',\n    \'name\',\n    \'occupiable_area\',\n    \'occupiable_area_m2pg\',\n    \'occupiable_volume\',\n    \'occupiable_volume_pct\',\n    \'pld\',\n    \'portals\',\n    \'rdls\',\n    \'sbu\',\n    \'specific_accessible_area\',\n    \'specific_occupiable_area\',\n    \'td10\',\n    \'topological_density\',\n    \'tpw_abs\',\n    \'tpw_pct\',\n    \'url_iza\',\n    \'url_zeomics\']\n\nData\n====\n\n+--------------------------+-------+---------------------------------------------+-------------+\n| Attribute                | Type  | Comment                                     | Data Source |\n+==========================+=======+=============================================+=============+\n| a                        | float | *a* unit cell length in Angstroms           | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| b                        | float | *b* unit cell length in Angstroms           | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| c                        | float | *c* unit cell legth in Angstroms            | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| alpha                    | float | *alpha* unit cell angle in degrees          | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| beta                     | float | *c* unit cell angle in degrees              | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| gamma                    | float | *c* unit cell angle in degrees              | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| code                     | str   | three letter framework code                 | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| name                     | str   | name of the framework in english            | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| atoms                    | int   | number of atoms in the unit cell            | [2]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| portals                  | int   | number of portals in the unit cell          | [2]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| cages                    | int   | number of cages in the unit cell            | [2]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| channels                 | int   | number of channels in the unit cell         | [2]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| junctions                | int   | number of junctions in the unit cell        | [2]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| connections              | int   | number of connections in the unit cell      | [2]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| tpv_abs                  | float | total pore volume in cm^3/g                 | [2]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| tpv_rel                  | float | relative total pore volume in %             | [2]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| lcd                      | float | largest cavity diameter in Angstrom         | [2]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| pld                      | float | pore limiting diameter in Angstrom          | [2]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| accessible_area          | float | accessible area in Angstrom^2               | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| accessible_area_m2pg     | float | accessible area in m^2/g                    | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| accessible_volume        | float | accessible volume in Angstrom^3             | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| accessible_volume_pct    | float | accessible volume in %                      | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| channel_dim              | int   | channel dimensionality                      | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| cif                      | str   | cif file contents                           | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| framework_density        | float | number of T-atoms per 1000 Angstrom^3       | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| isinterrrupted           | bool  | interrrupted framework                      | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| isdisordered             | bool  | disordered framework                        | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| maxdsd_a                 | float | maximum diameter of a sphere that can       | [1]_        |\n|                          |       | diffuse along *a*                           |             |\n+--------------------------+-------+---------------------------------------------+-------------+\n| maxdsd_b                 | float | maximum diameter of a sphere that can       | [1]_        |\n|                          |       | diffuse along *b*                           |             |\n+--------------------------+-------+---------------------------------------------+-------------+\n| maxdsd_c                 | float | maximum diameter of a sphere that can       | [1]_        |\n|                          |       | diffuse along *c*                           |             |\n+--------------------------+-------+---------------------------------------------+-------------+\n| maxdsi                   | float | maximum diameter of a sphere that can be    | [1]_        |\n|                          |       | included                                    |             |\n+--------------------------+-------+---------------------------------------------+-------------+\n| occupiable_area          | float | occupiable area in Angstrom^2               | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| occupiable_area_m2pg     | float | occupiable area in m^2/g                    | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| occupiable_volume        | float | occupiable volume in Angstrom^3             | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| occupiable_volume_pct    | float | occupiable volume in %                      | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| specific_accessible_area | float | accessible area per unit volume in m^2/cm^3 | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| specific_occupiable_area | float | occupiable area per unit volume in m^2/cm^3 | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| td10                     | float | approximate topological density             | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| topological_density      | float | topological density                         | [1]_        |\n+--------------------------+-------+---------------------------------------------+-------------+\n| url_iza                  | str   | link to the source [1]_ for this framework  |             |\n+--------------------------+-------+---------------------------------------------+-------------+\n| url_zeomics              | str   | link to the source [2]_ for this framework  |             |\n+--------------------------+-------+---------------------------------------------+-------------+\n\n.. [1] `IZA database of zeolite structures <http://www.iza-structure.org/databases/>`_\n.. [2] `ZEOMICS database <http://helios.princeton.edu/zeomics/>`_\n\n\n\n\nLicense\n=======\n\n| The MIT License (MIT)\n| \n| Copyright (c) 2015 Lukasz Mentel\n| \n| Permission is hereby granted, free of charge, to any person obtaining a copy\n| of this software and associated documentation files (the "Software"), to deal\n| in the Software without restriction, including without limitation the rights\n| to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n| copies of the Software, and to permit persons to whom the Software is\n| furnished to do so, subject to the following conditions:\n| \n| The above copyright notice and this permission notice shall be included in all\n| copies or substantial portions of the Software.\n| \n| THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n| IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n| FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n| AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n| LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n| OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n| SOFTWARE.\n',
    'author': 'Lukasz Mentel',
    'author_email': 'lmmentel@gmail.com',
    'maintainer': 'Lukasz Mentel',
    'maintainer_email': 'lmmentel@gmail.com',
    'url': 'https://github.com/lmmentel/zefram',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.8,<3.11',
}


setup(**setup_kwargs)
