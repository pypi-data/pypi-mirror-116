# coding: utf-8

# flake8: noqa

"""
    Taurus Data Jobs

    The Taurus Data Jobs internal and Control Plane API. Data Jobs allows Data Engineers to implement automated pull ingestion (E in ELT) and batch data transformation into Data Warehouse (T in ELT). See also https://github.com/vmware/versatile-data-kit/wiki/Introduction  The API has resource-oriented URLs, JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The API enables creating, deploying, managing and executing Data Jobs in runtime environment.<br> <br> The API reflects the usual Data Job Development lifecycle:<br> <li> Create a new data job (webhook to further configure job -e.g authorize its createion, setup permissions, etc). <li> Download keytab. Develop and run the data job locally. <li> Deploy data job in cloud runtime enviornment to run on scheduled basis. <br><br> If Authentication is required pass OAuth2 access token in http header 'Authorization: Bearer [access-token-here]'  The API promotes some best practices (inspired by https://12factor.net ): <li> Explicitly declare and isolate dependencies <li> Strict separation of config from code. Config varies substantially across deploys, code does not. <li> Separation between the build, release/deploy, and run stages <li> Data Jobs are stateless and share-nothing processes. Any data that needs to persist must be stored in a stateful backing service (e.g IProperties). <li> Implementation is assumed to be be atomic and idempotent - should be OK for a job to fail somewhere in the middle; subsequent restart should not cause data corruption. <li> Keep development, staging, and production as similar as possible <br><br> <b>API Evolution</b><br> In the following sections, there are some terms that have a special meaning in the context of the APIs. <br><br> <li> <i>Stable</i> - The implementation of API has been battle-tested (has been in production for some time - probably at least a month)                      API is subject to the semantic versioning model and will follow                      deprecation policy <li> <i>Experimental</i> - May disappear without notice and is not subject to semantic versioning                            Implementation of the API is not considered stable nor well tested.                            Generally this is given to clients to experiment within testing environment. Must not be used in Production. <li> <i>Deprecated</i> - API is expected to be removed within next one or two major version upgrade.                          The deprecation notice/comment will say when the API will be removed and what alternatives should be used instead.   # noqa: E501

    The version of the OpenAPI document: 1.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

__version__ = "1.0.2"

# import apis into sdk package
from taurus_datajob_api.api.data_jobs_api import DataJobsApi
from taurus_datajob_api.api.data_jobs_deployment_api import DataJobsDeploymentApi
from taurus_datajob_api.api.data_jobs_execution_api import DataJobsExecutionApi
from taurus_datajob_api.api.data_jobs_properties_api import DataJobsPropertiesApi
from taurus_datajob_api.api.data_jobs_service_api import DataJobsServiceApi
from taurus_datajob_api.api.data_jobs_sources_api import DataJobsSourcesApi

# import ApiClient
from taurus_datajob_api.api_client import ApiClient
from taurus_datajob_api.configuration import Configuration
from taurus_datajob_api.exceptions import OpenApiException
from taurus_datajob_api.exceptions import ApiTypeError
from taurus_datajob_api.exceptions import ApiValueError
from taurus_datajob_api.exceptions import ApiKeyError
from taurus_datajob_api.exceptions import ApiException
# import models into sdk package
from taurus_datajob_api.models.data_job import DataJob
from taurus_datajob_api.models.data_job_api_info import DataJobApiInfo
from taurus_datajob_api.models.data_job_config import DataJobConfig
from taurus_datajob_api.models.data_job_contacts import DataJobContacts
from taurus_datajob_api.models.data_job_deployment import DataJobDeployment
from taurus_datajob_api.models.data_job_deployment_status import DataJobDeploymentStatus
from taurus_datajob_api.models.data_job_execution import DataJobExecution
from taurus_datajob_api.models.data_job_execution_request import DataJobExecutionRequest
from taurus_datajob_api.models.data_job_mode import DataJobMode
from taurus_datajob_api.models.data_job_page import DataJobPage
from taurus_datajob_api.models.data_job_query_response import DataJobQueryResponse
from taurus_datajob_api.models.data_job_query_response_with_error import DataJobQueryResponseWithError
from taurus_datajob_api.models.data_job_resources import DataJobResources
from taurus_datajob_api.models.data_job_schedule import DataJobSchedule
from taurus_datajob_api.models.data_job_summary import DataJobSummary
from taurus_datajob_api.models.data_job_version import DataJobVersion
from taurus_datajob_api.models.enable import Enable
from taurus_datajob_api.models.error import Error

