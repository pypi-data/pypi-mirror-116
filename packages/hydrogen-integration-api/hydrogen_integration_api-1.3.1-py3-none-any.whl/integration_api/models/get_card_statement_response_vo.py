# coding: utf-8

"""
    Hydrogen Integration API

    The Hydrogen Integration API  # noqa: E501

    OpenAPI spec version: 1.3.1
    Contact: info@hydrogenplatform.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from integration_api.configuration import Configuration


class GetCardStatementResponseVO(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'currency_code': 'str',
        'ending_balance': 'float',
        'first_name': 'str',
        'initial_balance': 'float',
        'last_name': 'str',
        'message': 'str',
        'nucleus_card_id': 'str',
        'period_fees': 'float',
        'transactions': 'list[object]',
        'vendor_name': 'str',
        'vendor_response': 'object',
        'ytd_fees': 'float'
    }

    attribute_map = {
        'currency_code': 'currency_code',
        'ending_balance': 'ending_balance',
        'first_name': 'first_name',
        'initial_balance': 'initial_balance',
        'last_name': 'last_name',
        'message': 'message',
        'nucleus_card_id': 'nucleus_card_id',
        'period_fees': 'period_fees',
        'transactions': 'transactions',
        'vendor_name': 'vendor_name',
        'vendor_response': 'vendor_response',
        'ytd_fees': 'ytd_fees'
    }

    def __init__(self, currency_code=None, ending_balance=None, first_name=None, initial_balance=None, last_name=None, message=None, nucleus_card_id=None, period_fees=None, transactions=None, vendor_name=None, vendor_response=None, ytd_fees=None, _configuration=None):  # noqa: E501
        """GetCardStatementResponseVO - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._currency_code = None
        self._ending_balance = None
        self._first_name = None
        self._initial_balance = None
        self._last_name = None
        self._message = None
        self._nucleus_card_id = None
        self._period_fees = None
        self._transactions = None
        self._vendor_name = None
        self._vendor_response = None
        self._ytd_fees = None
        self.discriminator = None

        if currency_code is not None:
            self.currency_code = currency_code
        if ending_balance is not None:
            self.ending_balance = ending_balance
        if first_name is not None:
            self.first_name = first_name
        if initial_balance is not None:
            self.initial_balance = initial_balance
        if last_name is not None:
            self.last_name = last_name
        if message is not None:
            self.message = message
        if nucleus_card_id is not None:
            self.nucleus_card_id = nucleus_card_id
        if period_fees is not None:
            self.period_fees = period_fees
        if transactions is not None:
            self.transactions = transactions
        if vendor_name is not None:
            self.vendor_name = vendor_name
        if vendor_response is not None:
            self.vendor_response = vendor_response
        if ytd_fees is not None:
            self.ytd_fees = ytd_fees

    @property
    def currency_code(self):
        """Gets the currency_code of this GetCardStatementResponseVO.  # noqa: E501


        :return: The currency_code of this GetCardStatementResponseVO.  # noqa: E501
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this GetCardStatementResponseVO.


        :param currency_code: The currency_code of this GetCardStatementResponseVO.  # noqa: E501
        :type: str
        """

        self._currency_code = currency_code

    @property
    def ending_balance(self):
        """Gets the ending_balance of this GetCardStatementResponseVO.  # noqa: E501


        :return: The ending_balance of this GetCardStatementResponseVO.  # noqa: E501
        :rtype: float
        """
        return self._ending_balance

    @ending_balance.setter
    def ending_balance(self, ending_balance):
        """Sets the ending_balance of this GetCardStatementResponseVO.


        :param ending_balance: The ending_balance of this GetCardStatementResponseVO.  # noqa: E501
        :type: float
        """

        self._ending_balance = ending_balance

    @property
    def first_name(self):
        """Gets the first_name of this GetCardStatementResponseVO.  # noqa: E501


        :return: The first_name of this GetCardStatementResponseVO.  # noqa: E501
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this GetCardStatementResponseVO.


        :param first_name: The first_name of this GetCardStatementResponseVO.  # noqa: E501
        :type: str
        """

        self._first_name = first_name

    @property
    def initial_balance(self):
        """Gets the initial_balance of this GetCardStatementResponseVO.  # noqa: E501


        :return: The initial_balance of this GetCardStatementResponseVO.  # noqa: E501
        :rtype: float
        """
        return self._initial_balance

    @initial_balance.setter
    def initial_balance(self, initial_balance):
        """Sets the initial_balance of this GetCardStatementResponseVO.


        :param initial_balance: The initial_balance of this GetCardStatementResponseVO.  # noqa: E501
        :type: float
        """

        self._initial_balance = initial_balance

    @property
    def last_name(self):
        """Gets the last_name of this GetCardStatementResponseVO.  # noqa: E501


        :return: The last_name of this GetCardStatementResponseVO.  # noqa: E501
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this GetCardStatementResponseVO.


        :param last_name: The last_name of this GetCardStatementResponseVO.  # noqa: E501
        :type: str
        """

        self._last_name = last_name

    @property
    def message(self):
        """Gets the message of this GetCardStatementResponseVO.  # noqa: E501


        :return: The message of this GetCardStatementResponseVO.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this GetCardStatementResponseVO.


        :param message: The message of this GetCardStatementResponseVO.  # noqa: E501
        :type: str
        """

        self._message = message

    @property
    def nucleus_card_id(self):
        """Gets the nucleus_card_id of this GetCardStatementResponseVO.  # noqa: E501


        :return: The nucleus_card_id of this GetCardStatementResponseVO.  # noqa: E501
        :rtype: str
        """
        return self._nucleus_card_id

    @nucleus_card_id.setter
    def nucleus_card_id(self, nucleus_card_id):
        """Sets the nucleus_card_id of this GetCardStatementResponseVO.


        :param nucleus_card_id: The nucleus_card_id of this GetCardStatementResponseVO.  # noqa: E501
        :type: str
        """

        self._nucleus_card_id = nucleus_card_id

    @property
    def period_fees(self):
        """Gets the period_fees of this GetCardStatementResponseVO.  # noqa: E501


        :return: The period_fees of this GetCardStatementResponseVO.  # noqa: E501
        :rtype: float
        """
        return self._period_fees

    @period_fees.setter
    def period_fees(self, period_fees):
        """Sets the period_fees of this GetCardStatementResponseVO.


        :param period_fees: The period_fees of this GetCardStatementResponseVO.  # noqa: E501
        :type: float
        """

        self._period_fees = period_fees

    @property
    def transactions(self):
        """Gets the transactions of this GetCardStatementResponseVO.  # noqa: E501


        :return: The transactions of this GetCardStatementResponseVO.  # noqa: E501
        :rtype: list[object]
        """
        return self._transactions

    @transactions.setter
    def transactions(self, transactions):
        """Sets the transactions of this GetCardStatementResponseVO.


        :param transactions: The transactions of this GetCardStatementResponseVO.  # noqa: E501
        :type: list[object]
        """

        self._transactions = transactions

    @property
    def vendor_name(self):
        """Gets the vendor_name of this GetCardStatementResponseVO.  # noqa: E501


        :return: The vendor_name of this GetCardStatementResponseVO.  # noqa: E501
        :rtype: str
        """
        return self._vendor_name

    @vendor_name.setter
    def vendor_name(self, vendor_name):
        """Sets the vendor_name of this GetCardStatementResponseVO.


        :param vendor_name: The vendor_name of this GetCardStatementResponseVO.  # noqa: E501
        :type: str
        """

        self._vendor_name = vendor_name

    @property
    def vendor_response(self):
        """Gets the vendor_response of this GetCardStatementResponseVO.  # noqa: E501


        :return: The vendor_response of this GetCardStatementResponseVO.  # noqa: E501
        :rtype: object
        """
        return self._vendor_response

    @vendor_response.setter
    def vendor_response(self, vendor_response):
        """Sets the vendor_response of this GetCardStatementResponseVO.


        :param vendor_response: The vendor_response of this GetCardStatementResponseVO.  # noqa: E501
        :type: object
        """

        self._vendor_response = vendor_response

    @property
    def ytd_fees(self):
        """Gets the ytd_fees of this GetCardStatementResponseVO.  # noqa: E501


        :return: The ytd_fees of this GetCardStatementResponseVO.  # noqa: E501
        :rtype: float
        """
        return self._ytd_fees

    @ytd_fees.setter
    def ytd_fees(self, ytd_fees):
        """Sets the ytd_fees of this GetCardStatementResponseVO.


        :param ytd_fees: The ytd_fees of this GetCardStatementResponseVO.  # noqa: E501
        :type: float
        """

        self._ytd_fees = ytd_fees

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetCardStatementResponseVO, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetCardStatementResponseVO):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GetCardStatementResponseVO):
            return True

        return self.to_dict() != other.to_dict()
