# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from condition_pb2 import (
    ConditionGroup as condition_pb2___ConditionGroup,
)

from event_label_pb2 import (
    EventLabelValue as event_label_pb2___EventLabelValue,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from push_notification_pb2 import (
    Notification as push_notification_pb2___Notification,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

AutomationStatusValue = typing___NewType('AutomationStatusValue', builtin___int)
type___AutomationStatusValue = AutomationStatusValue
AutomationStatus: _AutomationStatus
class _AutomationStatus(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AutomationStatusValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    AUTOMATION_STATUS_UNSPECIFIED = typing___cast(AutomationStatusValue, 0)
    AUTOMATION_STATUS_ENABLED = typing___cast(AutomationStatusValue, 1)
    AUTOMATION_STATUS_PAUSED = typing___cast(AutomationStatusValue, 2)
AUTOMATION_STATUS_UNSPECIFIED = typing___cast(AutomationStatusValue, 0)
AUTOMATION_STATUS_ENABLED = typing___cast(AutomationStatusValue, 1)
AUTOMATION_STATUS_PAUSED = typing___cast(AutomationStatusValue, 2)
type___AutomationStatus = AutomationStatus

class EventTrigger(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    event_label: event_label_pb2___EventLabelValue = ...

    @property
    def trigger(self) -> condition_pb2___ConditionGroup: ...

    def __init__(self,
        *,
        event_label : typing___Optional[event_label_pb2___EventLabelValue] = None,
        trigger : typing___Optional[condition_pb2___ConditionGroup] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"trigger",b"trigger"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"event_label",b"event_label",u"trigger",b"trigger"]) -> None: ...
type___EventTrigger = EventTrigger

class MetricTrigger(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def trigger(self) -> condition_pb2___ConditionGroup: ...

    def __init__(self,
        *,
        trigger : typing___Optional[condition_pb2___ConditionGroup] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"trigger",b"trigger"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"trigger",b"trigger"]) -> None: ...
type___MetricTrigger = MetricTrigger

class Trigger(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def event_trigger(self) -> type___EventTrigger: ...

    @property
    def metric_trigger(self) -> type___MetricTrigger: ...

    def __init__(self,
        *,
        event_trigger : typing___Optional[type___EventTrigger] = None,
        metric_trigger : typing___Optional[type___MetricTrigger] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"event_trigger",b"event_trigger",u"metric_trigger",b"metric_trigger",u"trigger",b"trigger"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"event_trigger",b"event_trigger",u"metric_trigger",b"metric_trigger",u"trigger",b"trigger"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"trigger",b"trigger"]) -> typing_extensions___Literal["event_trigger","metric_trigger"]: ...
type___Trigger = Trigger

class UpdateEntityAction(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    def __init__(self,
        ) -> None: ...
type___UpdateEntityAction = UpdateEntityAction

class Action(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def notification(self) -> push_notification_pb2___Notification: ...

    @property
    def update_entity(self) -> type___UpdateEntityAction: ...

    def __init__(self,
        *,
        notification : typing___Optional[push_notification_pb2___Notification] = None,
        update_entity : typing___Optional[type___UpdateEntityAction] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"action",b"action",u"notification",b"notification",u"update_entity",b"update_entity"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"action",b"action",u"notification",b"notification",u"update_entity",b"update_entity"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"action",b"action"]) -> typing_extensions___Literal["notification","update_entity"]: ...
type___Action = Action

class Automation(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    title: typing___Text = ...
    status: type___AutomationStatusValue = ...

    @property
    def trigger(self) -> type___Trigger: ...

    @property
    def action(self) -> type___Action: ...

    def __init__(self,
        *,
        title : typing___Optional[typing___Text] = None,
        status : typing___Optional[type___AutomationStatusValue] = None,
        trigger : typing___Optional[type___Trigger] = None,
        action : typing___Optional[type___Action] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"action",b"action",u"trigger",b"trigger"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"action",b"action",u"status",b"status",u"title",b"title",u"trigger",b"trigger"]) -> None: ...
type___Automation = Automation
