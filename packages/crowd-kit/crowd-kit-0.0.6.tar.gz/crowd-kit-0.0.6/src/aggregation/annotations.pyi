from typing import (
    Optional,
    Type
)

class Annotation:
    def __init__(self, type: Optional[Type] = None, title: Optional[str] = None, description: Optional[str] = None) -> None:
        """Method generated by attrs for class Annotation.
        """
        ...

    def format_google_style_attribute(self, name: str) -> str: ...

    def format_google_style_return(self): ...

    type: Optional[Type]
    title: Optional[str]
    description: Optional[str]


def manage_docstring(obj): ...


EMBEDDED_DATA = ...

LABELED_DATA = ...

PAIRWISE_DATA = ...

SEGMENTATION_DATA = ...

LABEL_PRIORS = ...

LABEL_SCORES = ...

TASKS_EMBEDDINGS = ...

TASKS_LABELS = ...

TASKS_LABEL_PROBAS = ...

TASKS_LABEL_SCORES = ...

TASKS_TRUE_LABELS = ...

SEGMENTATIONS = ...

SEGMENTATION = ...

SEGMENTATION_ERRORS = ...

IMAGE_PIXEL_PROBAS = ...

TASKS_SEGMENTATIONS = ...

BIASES = ...

SKILLS = ...

ERRORS = ...

WEIGHTED_DATA = ...

WEIGHTS = ...

OPTIONAL_SCORES = ...

OPTIONAL_SKILLS = ...

OPTIONAL_PROBAS = ...

OPTIONAL_PRIORS = ...

OPTIONAL_LABELS = ...

OPTIONAL_ERRORS = ...

OPTIONAL_WEIGHTS = ...
