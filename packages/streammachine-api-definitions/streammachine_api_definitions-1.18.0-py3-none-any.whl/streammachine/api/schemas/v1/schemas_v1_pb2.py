# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: streammachine/api/schemas/v1/schemas_v1.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from streammachine.api.entities.v1 import entities_v1_pb2 as streammachine_dot_api_dot_entities_dot_v1_dot_entities__v1__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='streammachine/api/schemas/v1/schemas_v1.proto',
  package='streammachine.api.schemas.v1',
  syntax='proto3',
  serialized_options=b'\n\037io.streammachine.api.schemas.v1P\001ZDgithub.com/streammachineio/api-definitions-go/api/schemas/v1;schemas',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n-streammachine/api/schemas/v1/schemas_v1.proto\x12\x1cstreammachine.api.schemas.v1\x1a/streammachine/api/entities/v1/entities_v1.proto\"8\n\x12ListSchemasRequest\x12\x12\n\nbilling_id\x18\x01 \x01(\t\x12\x0e\n\x06\x66ilter\x18\x02 \x01(\t\"M\n\x13ListSchemasResponse\x12\x36\n\x07schemas\x18\x01 \x03(\x0b\x32%.streammachine.api.entities.v1.Schema\"`\n\x13\x43reateSchemaRequest\x12\x12\n\nbilling_id\x18\x01 \x01(\t\x12\x35\n\x06schema\x18\x02 \x01(\x0b\x32%.streammachine.api.entities.v1.Schema\"M\n\x14\x43reateSchemaResponse\x12\x35\n\x06schema\x18\x01 \x01(\x0b\x32%.streammachine.api.entities.v1.Schema\"\xa2\x01\n\x10GetSchemaRequest\x12\x12\n\nbilling_id\x18\x01 \x01(\t\x12\x35\n\x03ref\x18\x02 \x01(\x0b\x32(.streammachine.api.entities.v1.SchemaRef\x12\x43\n\x0b\x63luster_ref\x18\x03 \x01(\x0b\x32..streammachine.api.entities.v1.KafkaClusterRef\"`\n\x11GetSchemaResponse\x12\x35\n\x06schema\x18\x01 \x01(\x0b\x32%.streammachine.api.entities.v1.Schema\x12\x14\n\x0c\x63onfluent_id\x18\x02 \x01(\x05\"s\n\x14GetSchemaCodeRequest\x12\x12\n\nbilling_id\x18\x01 \x01(\t\x12\x35\n\x03ref\x18\x02 \x01(\x0b\x32(.streammachine.api.entities.v1.SchemaRef\x12\x10\n\x08language\x18\x03 \x01(\t\"J\n\x15GetSchemaCodeResponse\x12\x10\n\x08\x66ilename\x18\x01 \x01(\t\x12\x11\n\tdata_size\x18\x02 \x01(\x03\x12\x0c\n\x04\x64\x61ta\x18\x03 \x01(\x0c\x32\xe3\x03\n\x0eSchemasService\x12r\n\x0bListSchemas\x12\x30.streammachine.api.schemas.v1.ListSchemasRequest\x1a\x31.streammachine.api.schemas.v1.ListSchemasResponse\x12l\n\tGetSchema\x12..streammachine.api.schemas.v1.GetSchemaRequest\x1a/.streammachine.api.schemas.v1.GetSchemaResponse\x12u\n\x0c\x43reateSchema\x12\x31.streammachine.api.schemas.v1.CreateSchemaRequest\x1a\x32.streammachine.api.schemas.v1.CreateSchemaResponse\x12x\n\rGetSchemaCode\x12\x32.streammachine.api.schemas.v1.GetSchemaCodeRequest\x1a\x33.streammachine.api.schemas.v1.GetSchemaCodeResponseBi\n\x1fio.streammachine.api.schemas.v1P\x01ZDgithub.com/streammachineio/api-definitions-go/api/schemas/v1;schemasb\x06proto3'
  ,
  dependencies=[streammachine_dot_api_dot_entities_dot_v1_dot_entities__v1__pb2.DESCRIPTOR,])




_LISTSCHEMASREQUEST = _descriptor.Descriptor(
  name='ListSchemasRequest',
  full_name='streammachine.api.schemas.v1.ListSchemasRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='billing_id', full_name='streammachine.api.schemas.v1.ListSchemasRequest.billing_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='filter', full_name='streammachine.api.schemas.v1.ListSchemasRequest.filter', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=128,
  serialized_end=184,
)


_LISTSCHEMASRESPONSE = _descriptor.Descriptor(
  name='ListSchemasResponse',
  full_name='streammachine.api.schemas.v1.ListSchemasResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='schemas', full_name='streammachine.api.schemas.v1.ListSchemasResponse.schemas', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=186,
  serialized_end=263,
)


_CREATESCHEMAREQUEST = _descriptor.Descriptor(
  name='CreateSchemaRequest',
  full_name='streammachine.api.schemas.v1.CreateSchemaRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='billing_id', full_name='streammachine.api.schemas.v1.CreateSchemaRequest.billing_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='schema', full_name='streammachine.api.schemas.v1.CreateSchemaRequest.schema', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=265,
  serialized_end=361,
)


_CREATESCHEMARESPONSE = _descriptor.Descriptor(
  name='CreateSchemaResponse',
  full_name='streammachine.api.schemas.v1.CreateSchemaResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='schema', full_name='streammachine.api.schemas.v1.CreateSchemaResponse.schema', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=363,
  serialized_end=440,
)


_GETSCHEMAREQUEST = _descriptor.Descriptor(
  name='GetSchemaRequest',
  full_name='streammachine.api.schemas.v1.GetSchemaRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='billing_id', full_name='streammachine.api.schemas.v1.GetSchemaRequest.billing_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ref', full_name='streammachine.api.schemas.v1.GetSchemaRequest.ref', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cluster_ref', full_name='streammachine.api.schemas.v1.GetSchemaRequest.cluster_ref', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=443,
  serialized_end=605,
)


_GETSCHEMARESPONSE = _descriptor.Descriptor(
  name='GetSchemaResponse',
  full_name='streammachine.api.schemas.v1.GetSchemaResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='schema', full_name='streammachine.api.schemas.v1.GetSchemaResponse.schema', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='confluent_id', full_name='streammachine.api.schemas.v1.GetSchemaResponse.confluent_id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=607,
  serialized_end=703,
)


_GETSCHEMACODEREQUEST = _descriptor.Descriptor(
  name='GetSchemaCodeRequest',
  full_name='streammachine.api.schemas.v1.GetSchemaCodeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='billing_id', full_name='streammachine.api.schemas.v1.GetSchemaCodeRequest.billing_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ref', full_name='streammachine.api.schemas.v1.GetSchemaCodeRequest.ref', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='language', full_name='streammachine.api.schemas.v1.GetSchemaCodeRequest.language', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=705,
  serialized_end=820,
)


_GETSCHEMACODERESPONSE = _descriptor.Descriptor(
  name='GetSchemaCodeResponse',
  full_name='streammachine.api.schemas.v1.GetSchemaCodeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='filename', full_name='streammachine.api.schemas.v1.GetSchemaCodeResponse.filename', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='data_size', full_name='streammachine.api.schemas.v1.GetSchemaCodeResponse.data_size', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='data', full_name='streammachine.api.schemas.v1.GetSchemaCodeResponse.data', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=822,
  serialized_end=896,
)

_LISTSCHEMASRESPONSE.fields_by_name['schemas'].message_type = streammachine_dot_api_dot_entities_dot_v1_dot_entities__v1__pb2._SCHEMA
_CREATESCHEMAREQUEST.fields_by_name['schema'].message_type = streammachine_dot_api_dot_entities_dot_v1_dot_entities__v1__pb2._SCHEMA
_CREATESCHEMARESPONSE.fields_by_name['schema'].message_type = streammachine_dot_api_dot_entities_dot_v1_dot_entities__v1__pb2._SCHEMA
_GETSCHEMAREQUEST.fields_by_name['ref'].message_type = streammachine_dot_api_dot_entities_dot_v1_dot_entities__v1__pb2._SCHEMAREF
_GETSCHEMAREQUEST.fields_by_name['cluster_ref'].message_type = streammachine_dot_api_dot_entities_dot_v1_dot_entities__v1__pb2._KAFKACLUSTERREF
_GETSCHEMARESPONSE.fields_by_name['schema'].message_type = streammachine_dot_api_dot_entities_dot_v1_dot_entities__v1__pb2._SCHEMA
_GETSCHEMACODEREQUEST.fields_by_name['ref'].message_type = streammachine_dot_api_dot_entities_dot_v1_dot_entities__v1__pb2._SCHEMAREF
DESCRIPTOR.message_types_by_name['ListSchemasRequest'] = _LISTSCHEMASREQUEST
DESCRIPTOR.message_types_by_name['ListSchemasResponse'] = _LISTSCHEMASRESPONSE
DESCRIPTOR.message_types_by_name['CreateSchemaRequest'] = _CREATESCHEMAREQUEST
DESCRIPTOR.message_types_by_name['CreateSchemaResponse'] = _CREATESCHEMARESPONSE
DESCRIPTOR.message_types_by_name['GetSchemaRequest'] = _GETSCHEMAREQUEST
DESCRIPTOR.message_types_by_name['GetSchemaResponse'] = _GETSCHEMARESPONSE
DESCRIPTOR.message_types_by_name['GetSchemaCodeRequest'] = _GETSCHEMACODEREQUEST
DESCRIPTOR.message_types_by_name['GetSchemaCodeResponse'] = _GETSCHEMACODERESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ListSchemasRequest = _reflection.GeneratedProtocolMessageType('ListSchemasRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTSCHEMASREQUEST,
  '__module__' : 'streammachine.api.schemas.v1.schemas_v1_pb2'
  # @@protoc_insertion_point(class_scope:streammachine.api.schemas.v1.ListSchemasRequest)
  })
_sym_db.RegisterMessage(ListSchemasRequest)

ListSchemasResponse = _reflection.GeneratedProtocolMessageType('ListSchemasResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTSCHEMASRESPONSE,
  '__module__' : 'streammachine.api.schemas.v1.schemas_v1_pb2'
  # @@protoc_insertion_point(class_scope:streammachine.api.schemas.v1.ListSchemasResponse)
  })
_sym_db.RegisterMessage(ListSchemasResponse)

CreateSchemaRequest = _reflection.GeneratedProtocolMessageType('CreateSchemaRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATESCHEMAREQUEST,
  '__module__' : 'streammachine.api.schemas.v1.schemas_v1_pb2'
  # @@protoc_insertion_point(class_scope:streammachine.api.schemas.v1.CreateSchemaRequest)
  })
_sym_db.RegisterMessage(CreateSchemaRequest)

CreateSchemaResponse = _reflection.GeneratedProtocolMessageType('CreateSchemaResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATESCHEMARESPONSE,
  '__module__' : 'streammachine.api.schemas.v1.schemas_v1_pb2'
  # @@protoc_insertion_point(class_scope:streammachine.api.schemas.v1.CreateSchemaResponse)
  })
_sym_db.RegisterMessage(CreateSchemaResponse)

GetSchemaRequest = _reflection.GeneratedProtocolMessageType('GetSchemaRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETSCHEMAREQUEST,
  '__module__' : 'streammachine.api.schemas.v1.schemas_v1_pb2'
  # @@protoc_insertion_point(class_scope:streammachine.api.schemas.v1.GetSchemaRequest)
  })
_sym_db.RegisterMessage(GetSchemaRequest)

GetSchemaResponse = _reflection.GeneratedProtocolMessageType('GetSchemaResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETSCHEMARESPONSE,
  '__module__' : 'streammachine.api.schemas.v1.schemas_v1_pb2'
  # @@protoc_insertion_point(class_scope:streammachine.api.schemas.v1.GetSchemaResponse)
  })
_sym_db.RegisterMessage(GetSchemaResponse)

GetSchemaCodeRequest = _reflection.GeneratedProtocolMessageType('GetSchemaCodeRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETSCHEMACODEREQUEST,
  '__module__' : 'streammachine.api.schemas.v1.schemas_v1_pb2'
  # @@protoc_insertion_point(class_scope:streammachine.api.schemas.v1.GetSchemaCodeRequest)
  })
_sym_db.RegisterMessage(GetSchemaCodeRequest)

GetSchemaCodeResponse = _reflection.GeneratedProtocolMessageType('GetSchemaCodeResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETSCHEMACODERESPONSE,
  '__module__' : 'streammachine.api.schemas.v1.schemas_v1_pb2'
  # @@protoc_insertion_point(class_scope:streammachine.api.schemas.v1.GetSchemaCodeResponse)
  })
_sym_db.RegisterMessage(GetSchemaCodeResponse)


DESCRIPTOR._options = None

_SCHEMASSERVICE = _descriptor.ServiceDescriptor(
  name='SchemasService',
  full_name='streammachine.api.schemas.v1.SchemasService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=899,
  serialized_end=1382,
  methods=[
  _descriptor.MethodDescriptor(
    name='ListSchemas',
    full_name='streammachine.api.schemas.v1.SchemasService.ListSchemas',
    index=0,
    containing_service=None,
    input_type=_LISTSCHEMASREQUEST,
    output_type=_LISTSCHEMASRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetSchema',
    full_name='streammachine.api.schemas.v1.SchemasService.GetSchema',
    index=1,
    containing_service=None,
    input_type=_GETSCHEMAREQUEST,
    output_type=_GETSCHEMARESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CreateSchema',
    full_name='streammachine.api.schemas.v1.SchemasService.CreateSchema',
    index=2,
    containing_service=None,
    input_type=_CREATESCHEMAREQUEST,
    output_type=_CREATESCHEMARESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetSchemaCode',
    full_name='streammachine.api.schemas.v1.SchemasService.GetSchemaCode',
    index=3,
    containing_service=None,
    input_type=_GETSCHEMACODEREQUEST,
    output_type=_GETSCHEMACODERESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_SCHEMASSERVICE)

DESCRIPTOR.services_by_name['SchemasService'] = _SCHEMASSERVICE

# @@protoc_insertion_point(module_scope)
